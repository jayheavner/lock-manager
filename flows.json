[
    {
        "id": "2f263f0.080e7c2",
        "type": "tab",
        "label": "Variables",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4d149fd1.afec5",
        "type": "tab",
        "label": "Start up/Scheduled",
        "disabled": false,
        "info": ""
    },
    {
        "id": "593fb5af.ec311c",
        "type": "tab",
        "label": "Debugging",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4c9161c6.7a8fe",
        "type": "tab",
        "label": "Form",
        "disabled": false,
        "info": ""
    },
    {
        "id": "eebb6675.799d48",
        "type": "tab",
        "label": "Event Handlers",
        "disabled": false,
        "info": ""
    },
    {
        "id": "59474d53.1b40d4",
        "type": "tab",
        "label": "Logging",
        "disabled": false,
        "info": ""
    },
    {
        "id": "702e3f6b.43278",
        "type": "tab",
        "label": "Notifications",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e037ddc.bbf4a2",
        "type": "tab",
        "label": "Encryption",
        "disabled": false,
        "info": ""
    },
    {
        "id": "cd3e33e6.2da5b",
        "type": "subflow",
        "name": "Get Users",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "c9749e4f.153b7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1480,
                "y": 80,
                "wires": [
                    {
                        "id": "95340430.79a298",
                        "port": 0
                    },
                    {
                        "id": "f6e8edc7.e28f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "a99fcbd1.cd0898",
        "type": "subflow",
        "name": "Get User",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 30,
                "y": 40,
                "wires": [
                    {
                        "id": "e2e148c2.265e98"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 280,
                "y": 40,
                "wires": [
                    {
                        "id": "e2e148c2.265e98",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "f5c4273d.2d80f",
        "type": "subflow",
        "name": "Upsert User",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "2801a0a5.a97bf8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1700,
                "y": 120,
                "wires": [
                    {
                        "id": "2646e9e1.bb4596",
                        "port": 0
                    }
                ]
            },
            {
                "x": 720,
                "y": 140,
                "wires": [
                    {
                        "id": "a630fae5.638f98",
                        "port": 0
                    },
                    {
                        "id": "c31f6187.7d81f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "1f5f3da9.ce3eca",
        "type": "subflow",
        "name": "Delete User",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "2f82b553.01672a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 600,
                "y": 40,
                "wires": [
                    {
                        "id": "3e0183e9.5d136c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "bae968bd.7a3cb8",
        "type": "subflow",
        "name": "subflow - encrypt",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "c61c95b0.05a298"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 480,
                "y": 60,
                "wires": [
                    {
                        "id": "f392ddb1.dae4e",
                        "port": 0
                    },
                    {
                        "id": "c61c95b0.05a298",
                        "port": 1
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "43717449.df2fbc",
        "type": "subflow",
        "name": "subflow - decrypt",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "8c1bca1e.b71368"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 480,
                "y": 80,
                "wires": [
                    {
                        "id": "c2747add.afb318",
                        "port": 0
                    },
                    {
                        "id": "8c1bca1e.b71368",
                        "port": 1
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "85b5cbfc.b785c8",
        "type": "subflow",
        "name": "Get next slot",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "6b35b6b7.e4ae98"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 780,
                "y": 60,
                "wires": [
                    {
                        "id": "4d9d608.3b016a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "status": {
            "x": 600,
            "y": 100,
            "wires": [
                {
                    "id": "e2b11f71.91bbe",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "b93cc620.a18cb8",
        "type": "subflow",
        "name": "Generate random number",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "408f83ca.0d2cec"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 820,
                "y": 100,
                "wires": [
                    {
                        "id": "a1675988.0e8e88",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "status": {
            "x": 640,
            "y": 140,
            "wires": [
                {
                    "id": "52dc6c7b.f04b94",
                    "port": 2
                }
            ]
        }
    },
    {
        "id": "2994561d.23b94a",
        "type": "subflow",
        "name": "Delete Slot",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "a13a7b77.6013b8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1400,
                "y": 420,
                "wires": [
                    {
                        "id": "961b4e44.5fba8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "e7bd86c3.896d68",
        "type": "subflow",
        "name": "Program Slot",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "c7261977.3b021"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 820,
                "y": 80,
                "wires": [
                    {
                        "id": "a39afffa.9eaf5",
                        "port": 0
                    }
                ]
            },
            {
                "x": 640,
                "y": 120,
                "wires": [
                    {
                        "id": "ba055706.89354",
                        "port": 0
                    }
                ]
            },
            {
                "x": 440,
                "y": 160,
                "wires": [
                    {
                        "id": "654efc98.951194",
                        "port": 2
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "56145c0c.026bc4",
        "type": "subflow",
        "name": "Convert to array",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 40,
                "wires": [
                    {
                        "id": "2120cd5d.5d5672"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 450,
                "y": 40,
                "wires": [
                    {
                        "id": "2120cd5d.5d5672",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "3f31c381.f34b6c",
        "type": "subflow",
        "name": "Code Exists?",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "49a9c0a4.0b32a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 40,
                "wires": [
                    {
                        "id": "3003d25.68d252e",
                        "port": 0
                    }
                ]
            },
            {
                "x": 420,
                "y": 120,
                "wires": [
                    {
                        "id": "3003d25.68d252e",
                        "port": 1
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "b8e924ca.5a2238",
        "type": "subflow",
        "name": "Name Exists?",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "3abab958.832826"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 580,
                "y": 60,
                "wires": [
                    {
                        "id": "3d6a34bf.abdfdc",
                        "port": 0
                    }
                ]
            },
            {
                "x": 580,
                "y": 140,
                "wires": [
                    {
                        "id": "3d6a34bf.abdfdc",
                        "port": 1
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "956006f5.f494f8",
        "type": "subflow",
        "name": "Get Slots",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "707563b9.14acac"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 580,
                "y": 60,
                "wires": [
                    {
                        "id": "2ecbecfa.4fb454",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "57f31d03.1c5fc4",
        "type": "subflow",
        "name": "Get Slot",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "d06d05e6.d2c008"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 960,
                "y": 120,
                "wires": [
                    {
                        "id": "216b2122.91ddf6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "9b97ee84.83a28",
        "type": "mongodb3",
        "z": 0,
        "uri": "mongodb://mongodb:27017/LockManager",
        "name": "LockManager",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "1fff74d9.620a6b",
        "type": "ui_group",
        "z": "",
        "name": "Users",
        "tab": "35186fa6.ad202",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "f81674f9.0542a8",
        "type": "ui_group",
        "z": "",
        "name": "pin",
        "tab": "35186fa6.ad202",
        "order": 1,
        "disp": false,
        "width": "1"
    },
    {
        "id": "35186fa6.ad202",
        "type": "ui_tab",
        "z": 0,
        "name": "Users",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5cd657ab.3e5f48",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "M/D/YY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "eb298404.4f0378",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1fff74d9.620a6b",
        "order": 5,
        "width": "6",
        "height": 1
    },
    {
        "id": "a7234526.980c28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1fff74d9.620a6b",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "71ad4e4d.e8bbc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1fff74d9.620a6b",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "b911ddaa.22ae6",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1fff74d9.620a6b",
        "order": 13,
        "width": "6",
        "height": 1
    },
    {
        "id": "e1d97e5a.f1add",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1fff74d9.620a6b",
        "order": 19,
        "width": "3",
        "height": 1
    },
    {
        "id": "3d92dfae.1b6f5",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "1fff74d9.620a6b",
        "order": 24,
        "width": "6",
        "height": "5"
    },
    {
        "id": "349447fb.a8b908",
        "type": "server",
        "z": "",
        "name": "Home Assistant",
        "legacy": false,
        "hassio": false,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true
    },
    {
        "id": "7fbc5f5e.d45f6",
        "type": "mongodb3",
        "z": 0,
        "uri": "mongodb://mongodb:27017/LockManager",
        "name": "LockManager",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "7555299e.f56478",
        "type": "mongodb3",
        "z": 0,
        "uri": "mongodb://mongodb:27017/LockManager",
        "name": "LockManager",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "8fa528f9.3ee0b8",
        "type": "comment",
        "z": "4d149fd1.afec5",
        "name": "Process one-time codes",
        "info": "I am deleting these from the LockSlot table and marking \nthe code as disabled in the LockUsers table.",
        "x": 120,
        "y": 500,
        "wires": []
    },
    {
        "id": "5565cfc0.e68ad",
        "type": "function",
        "z": "4d149fd1.afec5",
        "name": "Build query",
        "func": "msg.payload =  [  \n    { $and: [{ name: msg.user.name }, { onetime: true }] }\n];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 540,
        "wires": [
            [
                "eea0da68.d1ff68",
                "d796df4b.54cea"
            ]
        ]
    },
    {
        "id": "eea0da68.d1ff68",
        "type": "mongodb3 in",
        "z": "4d149fd1.afec5",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "Search for code",
        "collection": "LockManager",
        "operation": "find.toArray",
        "x": 320,
        "y": 540,
        "wires": [
            [
                "329b8684.ab716a",
                "21f3a735.4bead8"
            ]
        ]
    },
    {
        "id": "21f3a735.4bead8",
        "type": "function",
        "z": "4d149fd1.afec5",
        "name": "Code found",
        "func": "var _ = context.global.lodash;\nvar moment = context.global.moment;\n\nif (!_.isEmpty(msg.payload)) {\n    node.status({ fill: \"blue\", shape: \"dot\", text: `Disabling ${msg.user.name} at ${moment().format('M/D/YY h:mm a')}` });\n    return msg;\n}\n\nreturn [null, msg];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 490,
        "y": 540,
        "wires": [
            [
                "7a521941.8b3128"
            ],
            [
                "6617113d.d1b19"
            ]
        ]
    },
    {
        "id": "6617113d.d1b19",
        "type": "debug",
        "z": "4d149fd1.afec5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 650,
        "y": 580,
        "wires": []
    },
    {
        "id": "329b8684.ab716a",
        "type": "debug",
        "z": "4d149fd1.afec5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 470,
        "y": 580,
        "wires": []
    },
    {
        "id": "9929a8eb.21b828",
        "type": "debug",
        "z": "4d149fd1.afec5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 790,
        "y": 580,
        "wires": []
    },
    {
        "id": "372053f5.d41c1c",
        "type": "link in",
        "z": "4d149fd1.afec5",
        "name": "Process one-time code",
        "links": [
            "18af61.544c50a"
        ],
        "x": 35,
        "y": 560,
        "wires": [
            [
                "5565cfc0.e68ad",
                "800060ee.083d3"
            ]
        ]
    },
    {
        "id": "ac735915.a7d0c8",
        "type": "comment",
        "z": "4d149fd1.afec5",
        "name": "### START-UP ACTIONS ###",
        "info": "",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "ef24beba.d972b",
        "type": "comment",
        "z": "4d149fd1.afec5",
        "name": "### NOTES ###",
        "info": "My lock slots are out of sync with my table so I need\nto delete and rebuild both. I think I have it removing\ninvalid codes but I need to figure out how to put\ncodes into the lock when I've removed codes 2, 4, 5 \nwhile codes 1, 3, 6, 7 are still present. I'd rather\nnot reshuffle. I could also move to static slots.",
        "x": 320,
        "y": 4980,
        "wires": []
    },
    {
        "id": "42f02ddb.5c3f14",
        "type": "debug",
        "z": "eebb6675.799d48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 390,
        "y": 40,
        "wires": []
    },
    {
        "id": "fc91070a.f4d058",
        "type": "debug",
        "z": "eebb6675.799d48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 390,
        "y": 140,
        "wires": []
    },
    {
        "id": "546805d4.be780c",
        "type": "debug",
        "z": "eebb6675.799d48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 390,
        "y": 200,
        "wires": []
    },
    {
        "id": "1a99bb65.a741e5",
        "type": "debug",
        "z": "eebb6675.799d48",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 390,
        "y": 260,
        "wires": []
    },
    {
        "id": "24ef80d5.1742b",
        "type": "debug",
        "z": "eebb6675.799d48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 390,
        "y": 320,
        "wires": []
    },
    {
        "id": "4c5d80e5.0aeb4",
        "type": "function",
        "z": "eebb6675.799d48",
        "name": "",
        "func": "node.log(\"**************************\");\nnode.log(\"lock\");\nnode.log(JSON.stringify(msg, null, 2));\nnode.log(JSON.stringify(msg.payload));\nnode.log(\"**************************\");\nnode.log(\"\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 80,
        "wires": [
            [
                "42f02ddb.5c3f14",
                "a43c5aa3.d64f28"
            ]
        ]
    },
    {
        "id": "a903e783.baa408",
        "type": "function",
        "z": "eebb6675.799d48",
        "name": "",
        "func": "node.log(\"**************************\");\nnode.log(\"deadbolt\");\nnode.log(JSON.stringify(msg, null, 2));\nnode.log(JSON.stringify(msg.payload));\nnode.log(\"**************************\");\nnode.log(\"\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 140,
        "wires": [
            [
                "fc91070a.f4d058"
            ]
        ]
    },
    {
        "id": "ec48e612.419ef8",
        "type": "function",
        "z": "eebb6675.799d48",
        "name": "",
        "func": "node.log(\"**************************\");\nnode.log(\"alarm level\");\nnode.log(JSON.stringify(msg, null, 2));\nnode.log(JSON.stringify(msg.payload));\nnode.log(\"**************************\");\nnode.log(\"\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "546805d4.be780c"
            ]
        ]
    },
    {
        "id": "5e9b9c38.42e2d4",
        "type": "function",
        "z": "eebb6675.799d48",
        "name": "",
        "func": "node.log(\"**************************\");\nnode.log(\"alarm type\");\nnode.log(JSON.stringify(msg, null, 2));\nnode.log(JSON.stringify(msg.payload));\nnode.log(\"**************************\");\nnode.log(\"\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "1a99bb65.a741e5"
            ]
        ]
    },
    {
        "id": "cf114afb.b5c1f8",
        "type": "function",
        "z": "eebb6675.799d48",
        "name": "",
        "func": "node.log(\"**************************\");\nnode.log(\"lock batteries\");\nnode.log(JSON.stringify(msg, null, 2));\nnode.log(JSON.stringify(msg.payload));\nnode.log(\"**************************\");\nnode.log(\"\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 320,
        "wires": [
            [
                "24ef80d5.1742b"
            ]
        ]
    },
    {
        "id": "3a902f56.fad2a",
        "type": "comment",
        "z": "eebb6675.799d48",
        "name": "### LOCK HANDLERS ###",
        "info": "",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "a43c5aa3.d64f28",
        "type": "switch",
        "z": "eebb6675.799d48",
        "name": "Lock/Unlock",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "locked",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "unlocked",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 410,
        "y": 80,
        "wires": [
            [
                "6c3fa7e5.bafb28"
            ],
            [
                "6c3fa7e5.bafb28"
            ],
            []
        ]
    },
    {
        "id": "6c3fa7e5.bafb28",
        "type": "function",
        "z": "eebb6675.799d48",
        "name": "Get slot user",
        "func": "var status = msg.data.new_state.attributes.lock_status;\nif (status.indexOf('user') == -1) {\n    // not a user code\n    msg.payload = {\n        state: `Door ${msg.payload}`,\n        type: msg.data.new_state.attributes.notification,\n        status: `Door ${msg.data.new_state.attributes.lock_status}`,\n        time: msg.data.new_state.last_updated\n    };\n    return [null, msg];\n}\n\nconst slots = global.get(\"slots\");\nvar slot = Number(status.substring(status.lastIndexOf(' ') + 1));\n\nconst user = slots.find(u => u.slot === slot);\nif (user === undefined)\n    return [null, null, { payload: `Door was opened with a code that doesn't have a matching slot ${slot}. Good chance the lock.clear_usercode didn't work which means HA has probably been updated and I need to run the update zwave script` }];\n    \n\nvar m = {};\nm.user = user;\nm.slot = slot;\nm.slots = slots;\nm.status = msg.payload,\nm.payload = {\n    state: `Door ${msg.payload}`,\n    type: msg.data.new_state.attributes.notification,\n    og_status: msg.data.new_state.attributes.lock_status,\n    status: `${status.substring(0, status.indexOf('user') -  4)} by ${user.name}`,\n    time: msg.data.new_state.last_updated\n};\n\nreturn m;",
        "outputs": 3,
        "noerr": 0,
        "x": 610,
        "y": 80,
        "wires": [
            [
                "dc0d6228.41e98",
                "de9d3dfb.b43c4",
                "41e93222.8a3e9c"
            ],
            [
                "b12a4d6b.5b059",
                "41e93222.8a3e9c",
                "e536416a.f931"
            ],
            [
                "cfd9716f.820c3",
                "1e222539.05dcfb"
            ]
        ]
    },
    {
        "id": "dc0d6228.41e98",
        "type": "debug",
        "z": "eebb6675.799d48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 750,
        "y": 40,
        "wires": []
    },
    {
        "id": "18af61.544c50a",
        "type": "link out",
        "z": "eebb6675.799d48",
        "name": "Call Process one-time code",
        "links": [
            "372053f5.d41c1c"
        ],
        "x": 1095,
        "y": 80,
        "wires": []
    },
    {
        "id": "234cefff.8f4c8",
        "type": "switch",
        "z": "eebb6675.799d48",
        "name": "Unlock?",
        "property": "status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "unlocked",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1000,
        "y": 80,
        "wires": [
            [
                "18af61.544c50a",
                "c95bf2c1.da2a1"
            ]
        ]
    },
    {
        "id": "de9d3dfb.b43c4",
        "type": "mongodb3 in",
        "z": "eebb6675.799d48",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "Log Locking",
        "collection": "LockLog",
        "operation": "insertOne",
        "x": 850,
        "y": 80,
        "wires": [
            [
                "234cefff.8f4c8",
                "38bddd8b.a024c2"
            ]
        ]
    },
    {
        "id": "38bddd8b.a024c2",
        "type": "debug",
        "z": "eebb6675.799d48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 990,
        "y": 40,
        "wires": []
    },
    {
        "id": "c95bf2c1.da2a1",
        "type": "debug",
        "z": "eebb6675.799d48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1130,
        "y": 120,
        "wires": []
    },
    {
        "id": "b12a4d6b.5b059",
        "type": "debug",
        "z": "eebb6675.799d48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 770,
        "y": 220,
        "wires": []
    },
    {
        "id": "cfd9716f.820c3",
        "type": "debug",
        "z": "eebb6675.799d48",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 770,
        "y": 260,
        "wires": []
    },
    {
        "id": "98a21bcd.098ee8",
        "type": "server-state-changed",
        "z": "eebb6675.799d48",
        "name": "lock",
        "server": "349447fb.a8b908",
        "version": 1,
        "entityidfilter": "lock.lock_front_door_lock",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "x": 70,
        "y": 80,
        "wires": [
            [
                "4c5d80e5.0aeb4"
            ]
        ]
    },
    {
        "id": "510be60d.904278",
        "type": "server-state-changed",
        "z": "eebb6675.799d48",
        "name": "deadbolt",
        "server": "349447fb.a8b908",
        "version": 1,
        "entityidfilter": "zwave.lock_front_door_deadbolt",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "x": 80,
        "y": 140,
        "wires": [
            [
                "a903e783.baa408"
            ]
        ]
    },
    {
        "id": "eba89a44.165de8",
        "type": "server-state-changed",
        "z": "eebb6675.799d48",
        "name": "alarm level",
        "server": "349447fb.a8b908",
        "version": 1,
        "entityidfilter": "sensor.lock_front_door_deadbolt_alarm_level",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "x": 80,
        "y": 200,
        "wires": [
            [
                "ec48e612.419ef8"
            ]
        ]
    },
    {
        "id": "c43adefd.6fc4d",
        "type": "server-state-changed",
        "z": "eebb6675.799d48",
        "name": "alarm type",
        "server": "349447fb.a8b908",
        "version": 1,
        "entityidfilter": "sensor.lock_front_door_deadbolt_alarm_type",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "x": 80,
        "y": 260,
        "wires": [
            [
                "5e9b9c38.42e2d4"
            ]
        ]
    },
    {
        "id": "f256442.5f489b8",
        "type": "server-state-changed",
        "z": "eebb6675.799d48",
        "name": "lock batteries",
        "server": "349447fb.a8b908",
        "version": 1,
        "entityidfilter": "sensor.door_lock_batteries_front_door",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "x": 90,
        "y": 320,
        "wires": [
            [
                "cf114afb.b5c1f8"
            ]
        ]
    },
    {
        "id": "b4a18fa5.1bbb4",
        "type": "ui_dropdown",
        "z": "4c9161c6.7a8fe",
        "name": "Users Dropdown",
        "label": "User",
        "tooltip": "",
        "place": "Choose...",
        "group": "1fff74d9.620a6b",
        "order": 1,
        "width": "6",
        "height": "1",
        "passthru": true,
        "options": [],
        "payload": "",
        "topic": "selected_user",
        "x": 310,
        "y": 120,
        "wires": [
            [
                "436d9f47.8be168"
            ]
        ]
    },
    {
        "id": "ac2159.44302ea8",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Populate",
        "func": "global.set('user_type', 'Updated');\nvar rec = msg.payload;\nflow.set(\"name\", rec.name)\n\nreturn rec",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 100,
        "wires": [
            [
                "36b1b3a5.b1127c",
                "e62d0872.3a8f88"
            ]
        ]
    },
    {
        "id": "b7ba8e07.b73b6",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Build Days",
        "func": "var selected = msg.days || [];\nflow.set(\"days\", msg.days);\nvar days = [{\"title\":\"Sunday\"},{\"title\":\"Monday\"},{\"title\":\"Tuesday\"},{\"title\":\"Wednesday\"},{\"title\":\"Thursday\"},{\"title\":\"Friday\"},{\"title\":\"Saturday\"}];\ndays.forEach(function(day) {\n    if (selected.indexOf(day.title) > -1)\n        day.isChecked = true;\n    else\n        day.isChecked = false;\n});\n\nmsg.enabled = flow.get(\"schedule\");\nmsg.payload = days;\nmsg.topic = \"Day\";\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 1160,
        "wires": [
            [
                "76e00f84.7716e"
            ]
        ]
    },
    {
        "id": "76e00f84.7716e",
        "type": "ui_list",
        "z": "4c9161c6.7a8fe",
        "group": "1fff74d9.620a6b",
        "name": "Days",
        "order": 21,
        "width": "6",
        "height": "7",
        "lineType": "one",
        "actionType": "check",
        "allowHTML": false,
        "x": 630,
        "y": 1160,
        "wires": [
            [
                "4ccd2f3e.479f5"
            ]
        ]
    },
    {
        "id": "e98eac51.bf0c1",
        "type": "ui_text",
        "z": "4c9161c6.7a8fe",
        "group": "1fff74d9.620a6b",
        "order": 2,
        "width": "2",
        "height": "1",
        "name": "New User Label",
        "label": "or new",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 320,
        "y": 180,
        "wires": []
    },
    {
        "id": "9019181f.5fcf68",
        "type": "ui_text_input",
        "z": "4c9161c6.7a8fe",
        "name": "New User",
        "label": "Name",
        "tooltip": "",
        "group": "1fff74d9.620a6b",
        "order": 3,
        "width": "4",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "new_user",
        "x": 320,
        "y": 220,
        "wires": [
            [
                "436d9f47.8be168"
            ]
        ]
    },
    {
        "id": "2ab97aa7.332a86",
        "type": "ui_switch",
        "z": "4c9161c6.7a8fe",
        "name": "Restrict Hours?",
        "label": "Restrict Hours?",
        "tooltip": "",
        "group": "1fff74d9.620a6b",
        "order": 20,
        "width": "6",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 480,
        "y": 1280,
        "wires": [
            [
                "dd8449df.d450b8"
            ]
        ]
    },
    {
        "id": "8203ae71.c51f7",
        "type": "ui_text_input",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "label": "Start Time",
        "tooltip": "",
        "group": "1fff74d9.620a6b",
        "order": 22,
        "width": "6",
        "height": "1",
        "passthru": true,
        "mode": "time",
        "delay": "0",
        "topic": "",
        "x": 1130,
        "y": 1260,
        "wires": [
            [
                "2835668f.83b45a"
            ]
        ]
    },
    {
        "id": "8b42fc48.65b6d",
        "type": "ui_text_input",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "label": "EndTime",
        "tooltip": "",
        "group": "1fff74d9.620a6b",
        "order": 23,
        "width": "6",
        "height": "1",
        "passthru": true,
        "mode": "time",
        "delay": "0",
        "topic": "",
        "x": 1120,
        "y": 1300,
        "wires": [
            [
                "f70b160c.ff8738"
            ]
        ]
    },
    {
        "id": "b1e88971.a1d6f8",
        "type": "ui_switch",
        "z": "4c9161c6.7a8fe",
        "name": "Schedule",
        "label": "Schedule?",
        "tooltip": "",
        "group": "1fff74d9.620a6b",
        "order": 18,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 400,
        "y": 1080,
        "wires": [
            [
                "d9454118.f1ead",
                "888e5b61.f27688"
            ]
        ]
    },
    {
        "id": "e3bb09b2.3f08e8",
        "type": "ui_switch",
        "z": "4c9161c6.7a8fe",
        "name": "OneTime",
        "label": "One-time?",
        "tooltip": "",
        "group": "1fff74d9.620a6b",
        "order": 8,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 400,
        "y": 560,
        "wires": [
            [
                "b11b0528.0a95d8"
            ]
        ]
    },
    {
        "id": "7516c24f.15c06c",
        "type": "ui_template",
        "z": "4c9161c6.7a8fe",
        "group": "1fff74d9.620a6b",
        "name": "<hr />",
        "order": 11,
        "width": 0,
        "height": 0,
        "format": "<hr style=\"width:100%\" />",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 190,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "3ceb3f55.50948",
        "type": "ui_template",
        "z": "4c9161c6.7a8fe",
        "group": "1fff74d9.620a6b",
        "name": "<hr />",
        "order": 17,
        "width": 0,
        "height": 0,
        "format": "<hr style=\"width:100%\" />",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 190,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "cdf108b.38b3af8",
        "type": "ui_switch",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "label": "Enabled?",
        "tooltip": "",
        "group": "1fff74d9.620a6b",
        "order": 6,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "enabled",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "2d3a06d5.ca058a"
            ]
        ]
    },
    {
        "id": "66e112ae.4369bc",
        "type": "ui_text_input",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "label": "Code",
        "tooltip": "1234",
        "group": "1fff74d9.620a6b",
        "order": 4,
        "width": "6",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "code",
        "x": 390,
        "y": 320,
        "wires": [
            [
                "b37b6388.c0e34"
            ]
        ]
    },
    {
        "id": "fc2e712c.245da",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Code",
        "rules": [
            {
                "t": "move",
                "p": "code",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 320,
        "wires": [
            [
                "66e112ae.4369bc"
            ]
        ]
    },
    {
        "id": "75d1f5de.c7e40c",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Enabled",
        "rules": [
            {
                "t": "move",
                "p": "code_enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 440,
        "wires": [
            [
                "cdf108b.38b3af8"
            ]
        ]
    },
    {
        "id": "4852e784.11fc38",
        "type": "ui_date_picker",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "label": "Start Date",
        "group": "1fff74d9.620a6b",
        "order": 15,
        "width": "6",
        "height": "2",
        "passthru": true,
        "topic": "date_begin",
        "x": 860,
        "y": 860,
        "wires": [
            [
                "65b5595d.a95258"
            ]
        ]
    },
    {
        "id": "96108f57.90f72",
        "type": "ui_date_picker",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "label": "End Date",
        "group": "1fff74d9.620a6b",
        "order": 16,
        "width": "6",
        "height": "2",
        "passthru": true,
        "topic": "date_begin",
        "x": 860,
        "y": 900,
        "wires": [
            [
                "b5cb2277.59a4c"
            ]
        ]
    },
    {
        "id": "f91dc64e.c66568",
        "type": "ui_switch",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "label": "Set end?",
        "tooltip": "",
        "group": "1fff74d9.620a6b",
        "order": 14,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 400,
        "y": 920,
        "wires": [
            [
                "97f66625.b3a748",
                "b463abd9.5d24a8"
            ]
        ]
    },
    {
        "id": "5489ec77.b49bb4",
        "type": "ui_switch",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "label": "Set Start",
        "tooltip": "",
        "group": "1fff74d9.620a6b",
        "order": 12,
        "width": "3",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 400,
        "y": 840,
        "wires": [
            [
                "733445db.cfe91c",
                "3dea3ca6.deb2c4"
            ]
        ]
    },
    {
        "id": "68f22b8b.63bca4",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Set Start",
        "rules": [
            {
                "t": "move",
                "p": "set_start",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 840,
        "wires": [
            [
                "5489ec77.b49bb4"
            ]
        ]
    },
    {
        "id": "f667af94.4284e",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Set End",
        "rules": [
            {
                "t": "move",
                "p": "set_end",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 920,
        "wires": [
            [
                "f91dc64e.c66568"
            ]
        ]
    },
    {
        "id": "733445db.cfe91c",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Enable/Disable Start Date",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "97f66625.b3a748",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Enable/Disable End Date",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 900,
        "wires": [
            [
                "96108f57.90f72"
            ]
        ]
    },
    {
        "id": "36b1b3a5.b1127c",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Populate Fields (out)",
        "links": [
            "9435546b.516d28"
        ],
        "x": 1375,
        "y": 100,
        "wires": []
    },
    {
        "id": "9435546b.516d28",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Populate Fields (in)",
        "links": [
            "36b1b3a5.b1127c",
            "c3f71bb5.2f46f8"
        ],
        "x": 1215,
        "y": 580,
        "wires": [
            [
                "dc50876.5318278"
            ]
        ]
    },
    {
        "id": "3782852a.d4e47a",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Clear Name Text (out)",
        "links": [
            "f8b873ef.02f41",
            "21c830e8.125bb"
        ],
        "x": 155,
        "y": 220,
        "wires": [
            [
                "9019181f.5fcf68"
            ]
        ]
    },
    {
        "id": "699748.bbc608b8",
        "type": "ui_button",
        "z": "4c9161c6.7a8fe",
        "name": "Reset Button",
        "group": "1fff74d9.620a6b",
        "order": 26,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "",
        "x": 270,
        "y": 1560,
        "wires": [
            [
                "6554b676.444d08"
            ]
        ]
    },
    {
        "id": "a34d3929.a91428",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Users - Reset Button (out)",
        "links": [
            "3d8671cf.76cbee",
            "788cc120.06c6e",
            "580e1fd5.bc0e9"
        ],
        "x": 575,
        "y": 1540,
        "wires": []
    },
    {
        "id": "e008ca86.7861d8",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Reset",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 1560,
        "wires": []
    },
    {
        "id": "bf8883f9.db1b1",
        "type": "ui_button",
        "z": "4c9161c6.7a8fe",
        "name": "Delete Button",
        "group": "1fff74d9.620a6b",
        "order": 27,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "",
        "x": 280,
        "y": 1640,
        "wires": [
            [
                "3fd547f0.664298"
            ]
        ]
    },
    {
        "id": "6554b676.444d08",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Enable name fields",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1560,
        "wires": [
            [
                "a34d3929.a91428",
                "e2348224.39952"
            ]
        ]
    },
    {
        "id": "3d8671cf.76cbee",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Users - Reset Button (in)",
        "links": [
            "a34d3929.a91428"
        ],
        "x": 155,
        "y": 180,
        "wires": [
            [
                "9019181f.5fcf68",
                "b4a18fa5.1bbb4"
            ]
        ]
    },
    {
        "id": "bf02fed5.9155",
        "type": "ui_toast",
        "z": "4c9161c6.7a8fe",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "Warning",
        "name": "Warning",
        "x": 1400,
        "y": 140,
        "wires": [
            [
                "ed50f6d1.10fca8"
            ]
        ]
    },
    {
        "id": "ed50f6d1.10fca8",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Reset",
        "func": "msg.payload = \"\";\nmsg.enabled = true;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1530,
        "y": 140,
        "wires": [
            [
                "21c830e8.125bb"
            ]
        ]
    },
    {
        "id": "21c830e8.125bb",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Clear Name Text (out)",
        "links": [
            "3782852a.d4e47a"
        ],
        "x": 1615,
        "y": 140,
        "wires": []
    },
    {
        "id": "16bd4db5.351e32",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "One-time",
        "rules": [
            {
                "t": "move",
                "p": "onetime",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 560,
        "wires": [
            [
                "e3bb09b2.3f08e8"
            ]
        ]
    },
    {
        "id": "dc50876.5318278",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 580,
        "wires": [
            [
                "5ff81dee.402714"
            ]
        ]
    },
    {
        "id": "c38e75b2.28ed18",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "code",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "set_start",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "set_end",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "start_date",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "end_date",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "onetime",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "days",
                "pt": "msg",
                "to": "[]",
                "tot": "bin"
            },
            {
                "t": "set",
                "p": "restrict_hours",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "start_time",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "end_time",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 620,
        "wires": [
            [
                "7784d686.3e4058"
            ]
        ]
    },
    {
        "id": "6aa6334a.6facfc",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Disable (in)",
        "links": [
            "e2348224.39952",
            "3ddfb3eb.8b718c",
            "b4c61fc.99b80e"
        ],
        "x": 1215,
        "y": 620,
        "wires": [
            [
                "c38e75b2.28ed18"
            ]
        ]
    },
    {
        "id": "5ff81dee.402714",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Enable (out)",
        "links": [
            "df437786.d8eec8",
            "b929ad8.2b79b5",
            "178dfa80.cabc66",
            "d3fc683.39d1998",
            "f40a4a6b.010d18",
            "13c2e9d6.da7046",
            "3285e435.aee33c",
            "205c7017.e567a",
            "2b6c6990.b35f96",
            "d7474773.750ca8",
            "13690cb0.2eabf3"
        ],
        "x": 1435,
        "y": 580,
        "wires": []
    },
    {
        "id": "7784d686.3e4058",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Disable (out)",
        "links": [
            "ec765ed2.bbdef",
            "1a0c8771.a0e189",
            "816ea056.6105e",
            "b19348ad.059e98",
            "61272809.382128",
            "e4051efe.eae37",
            "195b63c3.251ebc",
            "ccdf09eb.e32e58",
            "1930d3fd.ee4fbc",
            "ab87ee4a.aa2da",
            "30aade80.040d92"
        ],
        "x": 1435,
        "y": 620,
        "wires": []
    },
    {
        "id": "178dfa80.cabc66",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Enable (in)",
        "links": [
            "5ff81dee.402714"
        ],
        "x": 155,
        "y": 1140,
        "wires": [
            [
                "b7ba8e07.b73b6"
            ]
        ]
    },
    {
        "id": "b929ad8.2b79b5",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Enable (in)",
        "links": [
            "5ff81dee.402714"
        ],
        "x": 155,
        "y": 300,
        "wires": [
            [
                "fc2e712c.245da"
            ]
        ]
    },
    {
        "id": "df437786.d8eec8",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Enable (in)",
        "links": [
            "5ff81dee.402714"
        ],
        "x": 155,
        "y": 420,
        "wires": [
            [
                "75d1f5de.c7e40c"
            ]
        ]
    },
    {
        "id": "d3fc683.39d1998",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Enable (in)",
        "links": [
            "5ff81dee.402714"
        ],
        "x": 155,
        "y": 540,
        "wires": [
            [
                "16bd4db5.351e32"
            ]
        ]
    },
    {
        "id": "f40a4a6b.010d18",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Enable (in)",
        "links": [
            "5ff81dee.402714"
        ],
        "x": 155,
        "y": 820,
        "wires": [
            [
                "68f22b8b.63bca4"
            ]
        ]
    },
    {
        "id": "13c2e9d6.da7046",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Enable (in)",
        "links": [
            "5ff81dee.402714"
        ],
        "x": 155,
        "y": 900,
        "wires": [
            [
                "f667af94.4284e"
            ]
        ]
    },
    {
        "id": "b19348ad.059e98",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Disable (in)",
        "links": [
            "7784d686.3e4058"
        ],
        "x": 155,
        "y": 1180,
        "wires": [
            [
                "b7ba8e07.b73b6"
            ]
        ]
    },
    {
        "id": "1a0c8771.a0e189",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Disable (in)",
        "links": [
            "7784d686.3e4058"
        ],
        "x": 155,
        "y": 340,
        "wires": [
            [
                "fc2e712c.245da"
            ]
        ]
    },
    {
        "id": "816ea056.6105e",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Disable (in)",
        "links": [
            "7784d686.3e4058"
        ],
        "x": 155,
        "y": 460,
        "wires": [
            [
                "75d1f5de.c7e40c"
            ]
        ]
    },
    {
        "id": "e4051efe.eae37",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Disable (in)",
        "links": [
            "7784d686.3e4058"
        ],
        "x": 155,
        "y": 580,
        "wires": [
            [
                "16bd4db5.351e32"
            ]
        ]
    },
    {
        "id": "61272809.382128",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Disable (in)",
        "links": [
            "7784d686.3e4058"
        ],
        "x": 155,
        "y": 860,
        "wires": [
            [
                "68f22b8b.63bca4"
            ]
        ]
    },
    {
        "id": "ec765ed2.bbdef",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Disable (in)",
        "links": [
            "7784d686.3e4058"
        ],
        "x": 155,
        "y": 940,
        "wires": [
            [
                "f667af94.4284e"
            ]
        ]
    },
    {
        "id": "334b677d.0162f8",
        "type": "switch",
        "z": "4c9161c6.7a8fe",
        "name": "new or existing user?",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "selected_user",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "new_user",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 900,
        "y": 120,
        "wires": [
            [
                "a6d54302.9c975"
            ],
            [
                "3d196ecd.966092"
            ]
        ]
    },
    {
        "id": "e62d0872.3a8f88",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Disable name fields",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 60,
        "wires": [
            [
                "be1a4cd7.3a785"
            ]
        ]
    },
    {
        "id": "be1a4cd7.3a785",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Disable name fields (out)",
        "links": [
            "4e23522c.da521c"
        ],
        "x": 1575,
        "y": 60,
        "wires": []
    },
    {
        "id": "4e23522c.da521c",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Disable Name Fields (in)",
        "links": [
            "be1a4cd7.3a785"
        ],
        "x": 155,
        "y": 140,
        "wires": [
            [
                "b4a18fa5.1bbb4",
                "9019181f.5fcf68"
            ]
        ]
    },
    {
        "id": "e2348224.39952",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Disable and Reset Form Elements",
        "links": [
            "6aa6334a.6facfc"
        ],
        "x": 575,
        "y": 1580,
        "wires": []
    },
    {
        "id": "cac1c6cd.e1c018",
        "type": "ui_button",
        "z": "4c9161c6.7a8fe",
        "name": "Save Button",
        "group": "1fff74d9.620a6b",
        "order": 25,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "",
        "x": 270,
        "y": 1460,
        "wires": [
            [
                "d9c9880e.1564c8"
            ]
        ]
    },
    {
        "id": "3285e435.aee33c",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Enable (in)",
        "links": [
            "5ff81dee.402714"
        ],
        "x": 155,
        "y": 1600,
        "wires": [
            [
                "bf8883f9.db1b1"
            ]
        ]
    },
    {
        "id": "195b63c3.251ebc",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Disable (in)",
        "links": [
            "7784d686.3e4058"
        ],
        "x": 155,
        "y": 1640,
        "wires": [
            [
                "bf8883f9.db1b1"
            ]
        ]
    },
    {
        "id": "205c7017.e567a",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Enable (in)",
        "links": [
            "5ff81dee.402714"
        ],
        "x": 155,
        "y": 1440,
        "wires": [
            [
                "cac1c6cd.e1c018"
            ]
        ]
    },
    {
        "id": "ccdf09eb.e32e58",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Disable (in)",
        "links": [
            "7784d686.3e4058"
        ],
        "x": 155,
        "y": 1480,
        "wires": [
            [
                "cac1c6cd.e1c018"
            ]
        ]
    },
    {
        "id": "2b6c6990.b35f96",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Enable (in)",
        "links": [
            "5ff81dee.402714"
        ],
        "x": 155,
        "y": 1260,
        "wires": [
            [
                "ec510851.df8f28"
            ]
        ]
    },
    {
        "id": "1930d3fd.ee4fbc",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Disable (in)",
        "links": [
            "7784d686.3e4058"
        ],
        "x": 155,
        "y": 1300,
        "wires": [
            [
                "ec510851.df8f28"
            ]
        ]
    },
    {
        "id": "dd8449df.d450b8",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Enable/Disable Start/End Time",
        "rules": [
            {
                "t": "set",
                "p": "restrict_hours",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 1280,
        "wires": [
            [
                "aef9753e.a95f48",
                "26ccaac9.a32106"
            ]
        ]
    },
    {
        "id": "ec510851.df8f28",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Set Restricted",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "restrict_hours",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 1280,
        "wires": [
            [
                "2ab97aa7.332a86"
            ]
        ]
    },
    {
        "id": "aef9753e.a95f48",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Set Start Time",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "start_time",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 1260,
        "wires": [
            [
                "8203ae71.c51f7"
            ]
        ]
    },
    {
        "id": "26ccaac9.a32106",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Set EndTime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "end_time",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 1300,
        "wires": [
            [
                "8b42fc48.65b6d"
            ]
        ]
    },
    {
        "id": "370b6d7f.46e1c2",
        "type": "ui_switch",
        "z": "4c9161c6.7a8fe",
        "name": "Allow When Home",
        "label": "Allow when home?",
        "tooltip": "",
        "group": "1fff74d9.620a6b",
        "order": 10,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 490,
        "y": 680,
        "wires": [
            [
                "ffccae8.859765"
            ]
        ]
    },
    {
        "id": "59ea3491.020d5c",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Allow when home",
        "rules": [
            {
                "t": "move",
                "p": "allow_when_home",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 680,
        "wires": [
            [
                "370b6d7f.46e1c2"
            ]
        ]
    },
    {
        "id": "d7474773.750ca8",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Enable (in)",
        "links": [
            "5ff81dee.402714"
        ],
        "x": 155,
        "y": 660,
        "wires": [
            [
                "59ea3491.020d5c"
            ]
        ]
    },
    {
        "id": "ab87ee4a.aa2da",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Disable (in)",
        "links": [
            "7784d686.3e4058"
        ],
        "x": 155,
        "y": 700,
        "wires": [
            [
                "59ea3491.020d5c"
            ]
        ]
    },
    {
        "id": "cf1f8567.ef0498",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Disable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 140,
        "wires": []
    },
    {
        "id": "b4faf5a1.105ee8",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Reset",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 180,
        "wires": []
    },
    {
        "id": "c2952b73.1e37a8",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Clear",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 220,
        "wires": []
    },
    {
        "id": "c9dd7f7f.9b57d",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Load Names (in)",
        "links": [
            "853d5d00.80e64",
            "9ed8267.040fed8"
        ],
        "x": 155,
        "y": 100,
        "wires": [
            [
                "b4a18fa5.1bbb4"
            ]
        ]
    },
    {
        "id": "2a142443.8ed78c",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Names",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 100,
        "wires": []
    },
    {
        "id": "e0975dc.72b49a",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Enable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 300,
        "wires": []
    },
    {
        "id": "584722f9.5c7bac",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Disable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 340,
        "wires": []
    },
    {
        "id": "1ce62af.fe6f0d5",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Enable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 420,
        "wires": []
    },
    {
        "id": "bc3e7bcb.b1f038",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Disable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 460,
        "wires": []
    },
    {
        "id": "422f6e00.7c2524",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Enable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 540,
        "wires": []
    },
    {
        "id": "a00a72bc.962cb",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Disable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 580,
        "wires": []
    },
    {
        "id": "3cd20fbe.b1f17",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Enable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 660,
        "wires": []
    },
    {
        "id": "a2c1d07c.91046",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Disable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 700,
        "wires": []
    },
    {
        "id": "9028901c.e5d96",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Enable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 820,
        "wires": []
    },
    {
        "id": "463a64ea.60414c",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Disable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 860,
        "wires": []
    },
    {
        "id": "5ee9d512.97ac1c",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Enable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 900,
        "wires": []
    },
    {
        "id": "de8c918c.dfcb8",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Disable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 940,
        "wires": []
    },
    {
        "id": "a2985646.580d58",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Enable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f5cb7713.c95278",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Disable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 1180,
        "wires": []
    },
    {
        "id": "3a848aa.f2dc876",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Enable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 1260,
        "wires": []
    },
    {
        "id": "10f7e3ce.18569c",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Disable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 1300,
        "wires": []
    },
    {
        "id": "38c80857.f68d28",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Enable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 1440,
        "wires": []
    },
    {
        "id": "fec911ad.ef133",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Disable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 1480,
        "wires": []
    },
    {
        "id": "5891ad3d.c91e44",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Enable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 1600,
        "wires": []
    },
    {
        "id": "1c598974.e67427",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Disable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 1640,
        "wires": []
    },
    {
        "id": "13690cb0.2eabf3",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Enable (in)",
        "links": [
            "5ff81dee.402714"
        ],
        "x": 155,
        "y": 1060,
        "wires": [
            [
                "3900cd1b.720962"
            ]
        ]
    },
    {
        "id": "30aade80.040d92",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Disable (in)",
        "links": [
            "7784d686.3e4058"
        ],
        "x": 155,
        "y": 1100,
        "wires": [
            [
                "3900cd1b.720962"
            ]
        ]
    },
    {
        "id": "b3934120.ed70f",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Enable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 1060,
        "wires": []
    },
    {
        "id": "7c6530a.f7556d",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Disable",
        "info": "All reset flows come through here",
        "x": 70,
        "y": 1100,
        "wires": []
    },
    {
        "id": "3900cd1b.720962",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Schedule",
        "rules": [
            {
                "t": "move",
                "p": "schedule",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 1080,
        "wires": [
            [
                "b1e88971.a1d6f8"
            ]
        ]
    },
    {
        "id": "e5b50fb7.01688",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Enable",
        "info": "All reset flows come through here",
        "x": 1130,
        "y": 580,
        "wires": []
    },
    {
        "id": "56cfb515.9d63fc",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Disable",
        "info": "All reset flows come through here",
        "x": 1130,
        "y": 620,
        "wires": []
    },
    {
        "id": "b4ad800f.fa188",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Bulk enable/disable main form fields",
        "info": "# All reset flows come through here",
        "x": 1220,
        "y": 520,
        "wires": []
    },
    {
        "id": "647dcf0c.da984",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Validate Code",
        "func": "if (msg.payload === '' || (msg.hasOwnProperty('enabled') && !msg.enabled)) {\n    node.status({ fill: \"red\", shape: \"dot\", text: \"invalid\" });\n    return [null, msg];\n}\n\nconst code_length = global.get(\"code_length\");  \n\nvar exp = new RegExp(`^\\\\d{${code_length}}$`);\nif (!exp.test(msg.payload)) {\n    msg.code = msg.payload;\n    msg.topic = \"Invalid Code\";\n    msg.payload = `Please enter a ${code_length}-digit numeric code.`;\n    node.status({ fill: \"red\", shape: \"dot\", text: \"validation error\" });\n    return [null, null, msg];\n}\n\nvar msg2 = {};\nnode.status({ fill: \"green\", shape: \"dot\", text: \"valid\" });\nmsg2.code = msg.payload;\n\nmsg2.payload =  [  \n    { $or: [{ name: flow.get(\"name\") }, { code: msg.payload }] }\n];\nreturn msg2;\n",
        "outputs": 3,
        "noerr": 0,
        "x": 700,
        "y": 320,
        "wires": [
            [
                "b0b5a0fc.4f27b"
            ],
            [],
            [
                "6192e61.1e95c18"
            ]
        ]
    },
    {
        "id": "cdf7aa3a.8122e8",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "code",
                "pt": "flow",
                "to": "code",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 320,
        "wires": [
            [
                "69acff54.9d91d8"
            ]
        ]
    },
    {
        "id": "6192e61.1e95c18",
        "type": "ui_toast",
        "z": "4c9161c6.7a8fe",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "Invalid Code",
        "x": 890,
        "y": 340,
        "wires": []
    },
    {
        "id": "5bc5f60d.e22bb8",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Error message",
        "func": "msg.highlight = \"red\";\nmsg.topic = \"Code in use\";\nmsg.code = msg.code;\nmsg.payload = \"The entered code is already used. Please use a new code.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1080,
        "y": 280,
        "wires": [
            [
                "164d8298.0c9a7d"
            ]
        ]
    },
    {
        "id": "164d8298.0c9a7d",
        "type": "ui_toast",
        "z": "4c9161c6.7a8fe",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "Invalid Code",
        "x": 1250,
        "y": 280,
        "wires": [
            [
                "6e188720.3221e8"
            ]
        ]
    },
    {
        "id": "2d3a06d5.ca058a",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "set flow.enabled",
        "rules": [
            {
                "t": "set",
                "p": "code_enabled",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "ffccae8.859765",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "allow_when_home",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "b11b0528.0a95d8",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "onetime",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "e305175c.d07a58",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "start_date",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "b625e4f0.7018f8",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "end_date",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "d9454118.f1ead",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "schedule",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "2835668f.83b45a",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "start_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "f70b160c.ff8738",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "end_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "d9c9880e.1564c8",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Validate Fields",
        "func": "var o = {};\no.name = flow.get(\"name\");\no.code = flow.get(\"code\");\no.code_enabled = flow.get(\"code_enabled\");\no.onetime = flow.get(\"onetime\");\no.allow_when_home = flow.get(\"allow_when_home\");\no.set_start = flow.get(\"set_start\");\no.set_end = flow.get(\"set_end\");\no.start_date = o.set_start ? flow.get(\"start_date\") : undefined;\no.end_date = o.set_end ? flow.get(\"end_date\") : undefined;\no.schedule = flow.get(\"schedule\");\no.days = flow.get(\"days\");\no.restrict_hours = flow.get(\"restrict_hours\")\no.start_time = flow.get(\"start_time\");\no.end_time = flow.get(\"end_time\");\n\nif (o.schedule && o.restricted_hours && o.start_time >= o.end_time) {\n    msg.payload = \"The end time must be later than the start time.\";\n    node.status({fill:\"red\",shape:\"dot\",text:\"validation error\"});\n    return [null, msg];\n} else if (o.set_start && o.set_end && o.start_date >= o.end_date) {\n    msg.payload = \"The end date must be later than the start date.\";\n    node.status({fill:\"red\",shape:\"dot\",text:\"validation error\"});\n    return [null, msg];\n} else {\nmsg.payload = o;\nnode.status({fill:\"green\",shape:\"dot\",text:\"valid\"});\nreturn msg;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 440,
        "y": 1460,
        "wires": [
            [
                "c5997d4e.42c4e8"
            ],
            [
                "745a89fc.325a48"
            ]
        ]
    },
    {
        "id": "be53a62.c44e458",
        "type": "ui_toast",
        "z": "4c9161c6.7a8fe",
        "position": "dialog",
        "displayTime": "10",
        "highlight": "red",
        "outputs": 1,
        "ok": "Ok",
        "cancel": "",
        "topic": "Confirmation",
        "name": "Confirmation",
        "x": 970,
        "y": 1380,
        "wires": [
            [
                "db6459c.10592a8"
            ]
        ]
    },
    {
        "id": "3dea3ca6.deb2c4",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Start Date",
        "func": "var _ = context.global.lodash;\nvar moment = context.global.moment;\n\nmsg.enabled = msg.payload;\nmsg.set_start = msg.payload;\nflow.set(\"set_start\", msg.payload);\nmsg.payload = _.isEmpty(msg.start_date) ? moment().format('M/D/YY') : msg.start_date;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 820,
        "wires": [
            [
                "4852e784.11fc38"
            ]
        ]
    },
    {
        "id": "b463abd9.5d24a8",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "End Date",
        "func": "var _ = context.global.lodash;\nvar moment = context.global.moment;\n\nmsg.enabled = msg.payload;\nmsg.set_end = msg.payload;\nflow.set(\"set_end\", msg.payload);\nmsg.payload = _.isEmpty(msg.end_date) ? moment().format('M/D/YY') : msg.end_date;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 940,
        "wires": [
            [
                "96108f57.90f72"
            ]
        ]
    },
    {
        "id": "745a89fc.325a48",
        "type": "ui_toast",
        "z": "4c9161c6.7a8fe",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "Validation Error",
        "name": "Validation error",
        "x": 640,
        "y": 1480,
        "wires": []
    },
    {
        "id": "db6459c.10592a8",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Confirmation (out)",
        "links": [
            "35858099.9d5a9"
        ],
        "x": 1075,
        "y": 1380,
        "wires": []
    },
    {
        "id": "35858099.9d5a9",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Confirmation (in)",
        "links": [
            "db6459c.10592a8",
            "9c47c427.9b0958",
            "24de18a.a8f3de8"
        ],
        "x": 315,
        "y": 1520,
        "wires": [
            [
                "6554b676.444d08"
            ]
        ]
    },
    {
        "id": "888e5b61.f27688",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Enable/Disable",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "enabled",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1100,
        "wires": [
            [
                "76e00f84.7716e"
            ]
        ]
    },
    {
        "id": "4ccd2f3e.479f5",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Set flow.days",
        "func": "var daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]; // array of days sorted\nvar days = flow.get(\"days\");\nnode.log(`Current days => ${days}`);\nif (days === undefined || !Array.isArray(days)) days = [];\nif (msg.payload.isChecked) {\n    var match = days.includes(msg.payload.title)\n    node.log(\"match = \" + match);\n    if (!match) days.push(msg.payload.title);\n} else {\n    var i = days.indexOf(msg.payload.title)\n    node.log(\"i = \" + i);\n    if (i >= 0) days.splice(i, 1);\n}\nnode.log(`New days => ${days}`);\n\nvar sorted = days.sort(sort);\nnode.log(`sorted days => ${sorted}`);\nflow.set(\"days\", sorted);\nmsg.payload = sorted;\nreturn msg;\n\nfunction sort(a, b){\n    return daysOfWeek.indexOf(a) - daysOfWeek.indexOf(b); // basic sort function that compares the indexes of the two days\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "f224c038.25094",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "### FORM ###",
        "info": "",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "82fcda78.a7d788",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Build message",
        "func": "global.set(\"user_type\", \"Deleted\");\nmsg.name = flow.get(\"name\");\nmsg.code = flow.get(\"code\");\nmsg.payload = \"User deleted.\"\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 1640,
        "wires": [
            [
                "db9dc756.b02ce8"
            ]
        ]
    },
    {
        "id": "db9dc756.b02ce8",
        "type": "ui_toast",
        "z": "4c9161c6.7a8fe",
        "position": "dialog",
        "displayTime": "10",
        "highlight": "red",
        "outputs": 1,
        "ok": "Ok",
        "cancel": "",
        "topic": "Confirmation",
        "name": "Confirmation",
        "x": 950,
        "y": 1640,
        "wires": [
            [
                "9c47c427.9b0958",
                "ac5b99d.dfb3468",
                "288906ba.2ad8aa"
            ]
        ]
    },
    {
        "id": "9c47c427.9b0958",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Confirmation (out)",
        "links": [
            "35858099.9d5a9"
        ],
        "x": 1055,
        "y": 1600,
        "wires": []
    },
    {
        "id": "3fd547f0.664298",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Build query",
        "func": "let name = flow.get(\"name\");\n\nvar user = { \"payload\": name };\n\nreturn user;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 1640,
        "wires": [
            [
                "d0dd8efc.f3b568"
            ]
        ]
    },
    {
        "id": "fa13c2da.2f955",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "No passcode",
        "links": [
            "dfc7579e.988318"
        ],
        "x": 815,
        "y": 160,
        "wires": []
    },
    {
        "id": "a597f1ef.0669",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Display Keypad",
        "rules": [
            {
                "t": "set",
                "p": "keypad_displayed",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 160,
        "wires": [
            [
                "fa13c2da.2f955"
            ]
        ]
    },
    {
        "id": "6b6b7842.d92858",
        "type": "inject",
        "z": "e037ddc.bbf4a2",
        "name": "On Start",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 100,
        "y": 80,
        "wires": [
            [
                "559a8e55.75f01"
            ]
        ]
    },
    {
        "id": "b46079a1.be6708",
        "type": "comment",
        "z": "e037ddc.bbf4a2",
        "name": "Put Encryption Key into flow",
        "info": "The encryption key is hard-coded. \nDoesn't matter what it isas long as it doesn't change.",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "c2ba0532.1aec08",
        "type": "comment",
        "z": "e037ddc.bbf4a2",
        "name": "### Encryption example ###",
        "info": "Setting this up to encrypt data at rest but there are larger\nconsiderations. Mainly, I need to see if querying would still\nbe possible or if I'd have to do client-side querying after\ndecryption.",
        "x": 140,
        "y": 240,
        "wires": []
    },
    {
        "id": "559a8e55.75f01",
        "type": "credentials",
        "z": "e037ddc.bbf4a2",
        "name": "Put encryption key in global context",
        "props": [
            {
                "value": "encryption_key",
                "type": "global"
            }
        ],
        "x": 320,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ad5c9208.69ce4",
        "type": "ui_toast",
        "z": "4d149fd1.afec5",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 1110,
        "y": 120,
        "wires": []
    },
    {
        "id": "e98baa0f.849788",
        "type": "ui_template",
        "z": "4d149fd1.afec5",
        "group": "f81674f9.0542a8",
        "name": "Pin_Unlock",
        "order": 0,
        "width": "0",
        "height": "0",
        "format": "<div ng-init=\"init()\" id=\"pin_insert\" class=\"dialog\">\n    \n    <div class=\"dialog_content\">\n        \n        <div class=\"dialog_header\">\n            <h2 style=\"margin:10px\">Insert PIN</h2>\n        </div>\n        \n        <div class=\"dialog_body\">\n\n           <div layout=\"row\" layout-align=\"center\">\n                <div class=\"number_placeholder\">\n                    {{passcode.substring(0, 1)}}\n                </div>\n                <div class=\"number_placeholder\">\n                    {{passcode.substring(1, 2)}}\n                </div>\n                <div class=\"number_placeholder\">\n                    {{passcode.substring(2, 3)}}\n                </div>\n                <div class=\"number_placeholder\">\n                    {{passcode.substring(3, 4)}}\n                </div>\n            </div>\n            \n            <div layout=\"column\" layout-align=\"center\" style=\"margin-top: 10px\">\n                <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(1)\">1</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(2)\">2</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(3)\">3</md-button>\n                    </div>\n                </div>\n                 <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(4)\">4</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(5)\">5</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(6)\">6</md-button>\n                    </div>\n                </div>\n                 <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(7)\">7</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(8)\">8</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(9)\">9</md-button>\n                    </div>\n                </div>\n                 <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"confirm()\">\n                            <ng-md-icon icon=\"done\" style=\"color:#fff;\"></ng-md-icon>\n                        </md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(0)\">0</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"delete()\">\n                            <ng-md-icon icon=\"arrow_back\" style=\"color:#fff;\"></ng-md-icon>\n                        </md-button>\n                    </div>\n                </div>\n            </div> \n          \n        </div> <!--dialog_body-->\n    </div> <!--dialog_content-->\n</div>  <!--dialog-->\n\n\n<style>\n\n/* The Dialog (background) */\n.dialog {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 9999; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n    -webkit-transform: translateZ(0px);\n    -webkit-transform: translate3d(0,0,0);\n    -webkit-perspective: 1000;\n}\n\n.dialog_content {\n    position: absolute;\n    background-color: #fff;\n    left: calc(50% - 170px);\n    top: 30px;\n    border-radius: 10px;\n    padding: 0;\n    width: 340px;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animatetop;\n    animation-name: animatetop;\n    animation-duration: 0.4s;\n}\n\n/* Media query for smartphones (to Fix?) */\n@media only screen and (min-device-width : 375px) and (max-device-width : 667px) { \n    .dialog_content {\n    margin-top: 5%;\n    margin-left: 5%;\n}\n}\n\n/* Add Animation */\n@-webkit-keyframes animatetop {\n    from {top: -300px; opacity: 0} \n    to {top: 0; opacity: 1}\n}\n\n@keyframes animatetop {\n    from {top: -300px; opacity: 0}\n    to {top: 0; opacity: 1}\n}\n\n/* Dialog Header */\n.dialog_header {\n    padding: 2px 16px;\n    background-color: #03A9F4;\n    border-radius: 10px 10px 0 0;\n    color: white;\n}\n\n/* Dialog Body */\n.dialog_body {padding: 5px;}\n\n/* __ */\n.number_placeholder{\n    width: 50px;\n    height: 34px;\n    margin: 10px;\n    font-size: 20pt;\n    text-align: center;\n    border-bottom: 1px solid black;\n}\n\n/* Number container */\n.number_box{\n    margin: 5px;\n}\n\n/* Buttons style */\n.pin {\n    min-height: 50px;\n    min-width: 50px;\n    font-weight: bold;\n    margin: 0px 10px 10px 0px;\n    box-shadow: 4px 4px 6px 0 #dadada;\n    background-color: #29B6F6;\n    color: #fff;\n}\n\n.pin:not([disabled]):hover {\n    background-color: #03A9F4;\n}\n\n.btn1 {\n  color : rgb(49, 46, 46);\n  background-color: rgba(255, 222, 121, 0.96);\n  border-radius: 10px 0 0 10px;\n  font-size: 16px;\n}\n\n.btn1:not([disabled]):hover {\n  background-color: rgba(107, 103, 91, 0.96);\n  color: white;\n}\n\n.btn1[disabled] {\n  color : rgb(187, 187, 187);\n  background-color: rgba(230, 230, 229, 0.96);\n}\n\n</style>\n\n<script>\n\n/**\n * pin_dialog.js\n * Node-Red UI template for Node-Red Dashboard. \n * Custom dialog that asks for a PIN to allow actions\n * Enjoy it :). \n * -- Daniel\n *\n *\n * @license The Unlicense, http://unlicense.org/\n * @version 0.2\n * @author  Daniel Lando, https://github.com/robertsLando\n * @updated 2019-03-18\n * @link    ----\n *\n *\n */\n\nvar dialog;\n\n/* ==== */\n(function(scope) {\n    \n    scope.passcode = \"\";\n    scope.payload = \"\";\n    scope.inited = false;\n    \n    scope.init = function() {\n        scope.passcode = \"\";\n        //Hide the md-panel\n        $('#pin_insert').parent().parent().css(\"display\", \"none\");\n        //This trick make it works on smartphones too :)\n        dialog = $('#pin_insert').detach();\n        //dialog.appendTo(document.body); // This leaves ghost numpads if pinpad is not opened!\n    }\n    \n    scope.showDialog = function() {\n        dialog.appendTo(document.body); // better to add the body only when the numpad is displayed (seams to be removed automatically)\n        dialog.css(\"display\", \"block\");\n    }\n    \n    scope.closeDialog = function(){\n        dialog.css(\"display\", \"none\");\n    }\n    \n    scope.add = function(value) {\n        if(scope.passcode.length < 4) {\n            scope.passcode = scope.passcode + value;\n            if(scope.passcode.length == 4) {\n                console.log(\"The four digit code was entered\");\n                   \n            }\n        }\n    }\n \n    scope.delete = function() {\n        if(scope.passcode.length > 0) {\n            scope.passcode = scope.passcode.substring(0, scope.passcode.length - 1);\n        }\n    }\n    \n    scope.confirm = function() {\n        if(scope.passcode.length == 4) {\n            scope.send({passcode: scope.passcode, payload : scope.payload});\n            scope.closeDialog();\n            scope.passcode = \"\";\n            scope.payload = \"\";\n        }\n    }\n\n    scope.$watch('msg', function(data) {\n        if(data && data.topic){\n            switch(data.topic){\n               case \"show\":\n                   if(scope.inited){\n                        scope.payload = data.payload;\n                        scope.showDialog();\n                   }\n                   else\n                        scope.inited = true;\n                break;\n                case \"close\": \n                    scope.closeDialog(); \n                break;\n            }\n        }\n    });\n})(scope);\n\n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 470,
        "y": 140,
        "wires": [
            [
                "e389b9b9.810dc8"
            ]
        ]
    },
    {
        "id": "641f3e42.2c28e",
        "type": "function",
        "z": "4d149fd1.afec5",
        "name": "Show/hide keypad",
        "func": "var moment = context.global.moment;\n\nif (global.get(\"use_keypad\")) {\n    const displayed = global.get(\"keypad_displayed\") || false;\n    msg.displayed = displayed;\n    const passcode = global.get(\"passcode\") || '';\n    msg.passcode = passcode;\n    if (passcode === '' && !displayed) {\n        return {\n            payload: true,\n            topic: \"show\",\n            passcode: passcode,\n            keypad_displayed: displayed\n        };\n    }\n    \n    node.status({ fill: \"green\", shape:\"dot\", text: moment().format('MMM D h:mm a')} );\n    // TODO: fix this. Check to see if passcode is being used\n    global.set(\"passcode\", \"0000\");\n    return msg;\n} else {\n    node.status({ fill: \"red\", shape:\"dot\", text: 'keypad disabled'} );\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 140,
        "wires": [
            [
                "e98baa0f.849788"
            ]
        ]
    },
    {
        "id": "533027bd.f6ba18",
        "type": "inject",
        "z": "4d149fd1.afec5",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 110,
        "y": 120,
        "wires": [
            [
                "641f3e42.2c28e"
            ]
        ]
    },
    {
        "id": "ab7f288.8c3bbd8",
        "type": "link out",
        "z": "4d149fd1.afec5",
        "name": "Invalid Passcode",
        "links": [
            "dfc7579e.988318"
        ],
        "x": 1035,
        "y": 160,
        "wires": []
    },
    {
        "id": "dfc7579e.988318",
        "type": "link in",
        "z": "4d149fd1.afec5",
        "name": "Show Passcode",
        "links": [
            "ab7f288.8c3bbd8",
            "fa13c2da.2f955",
            "2d934ca9.6350d4"
        ],
        "x": 155,
        "y": 160,
        "wires": [
            [
                "641f3e42.2c28e"
            ]
        ]
    },
    {
        "id": "dac61c1f.92e0f",
        "type": "switch",
        "z": "4d149fd1.afec5",
        "name": "check",
        "property": "passcode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "passcode_value",
                "vt": "global"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 140,
        "wires": [
            [
                "e5fdf1c2.1373f"
            ],
            [
                "f14e51ee.82e6d"
            ]
        ]
    },
    {
        "id": "e5fdf1c2.1373f",
        "type": "change",
        "z": "4d149fd1.afec5",
        "name": "set passcode",
        "rules": [
            {
                "t": "set",
                "p": "passcode",
                "pt": "global",
                "to": "passcode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "keypad_displayed",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Pin successfully verified!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 120,
        "wires": [
            [
                "ad5c9208.69ce4",
                "bdb33ddd.2508"
            ]
        ]
    },
    {
        "id": "e389b9b9.810dc8",
        "type": "change",
        "z": "4d149fd1.afec5",
        "name": "set hidden",
        "rules": [
            {
                "t": "set",
                "p": "keypad_displayed",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 140,
        "wires": [
            [
                "dac61c1f.92e0f"
            ]
        ]
    },
    {
        "id": "f14e51ee.82e6d",
        "type": "change",
        "z": "4d149fd1.afec5",
        "name": "set error",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Invalid pin entered",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "passcode",
                "pt": "global",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 160,
        "wires": [
            [
                "ad5c9208.69ce4",
                "ab7f288.8c3bbd8"
            ]
        ]
    },
    {
        "id": "35a3384f.940f48",
        "type": "comment",
        "z": "4d149fd1.afec5",
        "name": "Verify user with keypad",
        "info": "If you don't want to use node-red security then this provides\nsome basic protection. It doesn't make it truly secure but \ndoes reduce risk.",
        "x": 120,
        "y": 80,
        "wires": []
    },
    {
        "id": "b9c82933.21fc38",
        "type": "ui_template",
        "z": "4c9161c6.7a8fe",
        "group": "1fff74d9.620a6b",
        "name": "Page Load",
        "order": 28,
        "width": 0,
        "height": 0,
        "format": "<script>\n(function() {\n    (function(scope) {\n        scope.send({payload: \"\"}); // this gets sent when the view is opened in the browser\n    })(scope);\n})();\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 90,
        "y": 1800,
        "wires": [
            [
                "b4c61fc.99b80e",
                "44840e5f.d50ba"
            ]
        ]
    },
    {
        "id": "b4c61fc.99b80e",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Page Load (out)",
        "links": [
            "dc41c3fe.c7d41",
            "6aa6334a.6facfc"
        ],
        "x": 215,
        "y": 1840,
        "wires": []
    },
    {
        "id": "580e1fd5.bc0e9",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Users - Page Load",
        "links": [
            "8bcdc191.59189",
            "a34d3929.a91428"
        ],
        "x": 135,
        "y": 1760,
        "wires": [
            [
                "44840e5f.d50ba"
            ]
        ]
    },
    {
        "id": "62e57e63.eb6e7",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Reset Form",
        "info": "All reset flows come through here",
        "x": 90,
        "y": 1720,
        "wires": []
    },
    {
        "id": "9ed8267.040fed8",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Dashboard - Lock Users - Load Names (out)",
        "links": [
            "c23f535e.114b",
            "c9dd7f7f.9b57d"
        ],
        "x": 695,
        "y": 1800,
        "wires": []
    },
    {
        "id": "44840e5f.d50ba",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Reset Flow Vars",
        "func": "flow.set(\"name\", undefined);\nflow.set(\"code\", undefined);\nflow.set(\"set_start\", undefined);\nflow.set(\"start_date\", undefined);\nflow.set(\"set_end\", undefined);\nflow.set(\"end_date\", undefined);\nflow.set(\"code_enabled\", undefined);\nflow.set(\"onetime\", undefined);\nflow.set(\"allow_when_home\", undefined);\nflow.set(\"schedule\", undefined);\nflow.set(\"days\", undefined);\nflow.set(\"set_start\", undefined);\nflow.set(\"set_end\", undefined);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 1800,
        "wires": [
            [
                "53d4f830.16d4b8"
            ]
        ]
    },
    {
        "id": "848280b6.52a18",
        "type": "comment",
        "z": "2f263f0.080e7c2",
        "name": "### IMPORTANT READ ME ###",
        "info": "This sets all variables that would otherwise be \nhard-coded into global/flow for use.\n\nuse_keypad - (boolean) true uses the keypad, false does not.\n\npasscode_value - the number that unlocks with the pin pad (global)\n\npasscode_timeout - number of seconds until passcode is required.\n\nlock_node_id - the node_id of the door lock in question\n\ncode_length - a number between 4 and whatever that corresponds to the length of the code.\n**For Schlage, all codes have to be the same length.**\nNOTE: This does not change the lock settings, only specifies what's accepted in the form.\n\nslot_offset - if there are slots that should never be touched, say slots 1-3, then enter a slot_offset\nvalue of 3. Default is 0.\n\nslot_offset_users - JSON array of users to handle the slot offsets. An example with 1 slot offset might be\n`[{ \"slot\": 0, \"name\": \"Lock button\" }, { \"slot\": 1, \"name\": \"Family\" }]`\n\n--why is this here? During testing I didn't want to mess with the important codes my family uses day-to-day.\n\ndevices_for_home - array of entity_id to check for home/away. \nAny device home is considered some_home, all devices home is considered all_home, all devices aways is considered all_away.\nThis is for 'allow when home' checks but could be expanded.\n\nnotify_devices - JSON array of devices to receive notifications. Example: ['notify.ios_my_iphone']\n\nnotify_on_lock - uses the notify device and sends a notification to that device when door is locked from the keypad.\n\nnotify_on_manual_lock - uses the notify device and sends a notification to that device when door is locked from the inside or with a key.\n\nnotify_on_unlock - uses the notify device and sends a notification to that device when door is unlocked from the keypad.\n\nnotify_on_manual_unlock - uses the notify device and sends a notification to that device when door is unlocked from the inside or with a key.\n\nuse_encryption - specifies whether or not to encrypt the codes in the db.\n\ndisable_all_codes_when_asleep - clears all codes, except slot codes, while sleeping. \n\nuse_clearcode - uses the lock.clear_usercode.This is **NOT** supported in Home Assistant without some work. System will always overwrite\ncodes with a random code but if this is true it will take the extra step of trying to clear the lock slot.\n\nlog_manual_lock - writes manual lock activities to log.\n\nlog_manual_unlock - writes manual lock activities to log.\n\nlog_user_changes - logs create, update, delete activities. *Note: masks code if use_encryption is true*\n\nlog_scheduled_changes - logs activities based on schedule. Also, logs one-time code usage.\n\nkeep_log_days - number of days to keep log data. Older data is removed.",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "510408bc.e416e8",
        "type": "inject",
        "z": "2f263f0.080e7c2",
        "name": "Create variables",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 130,
        "y": 80,
        "wires": [
            [
                "553a4b02.241964"
            ]
        ]
    },
    {
        "id": "553a4b02.241964",
        "type": "change",
        "z": "2f263f0.080e7c2",
        "name": "Create global vars",
        "rules": [
            {
                "t": "set",
                "p": "use_keypad",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "passcode_value",
                "pt": "global",
                "to": "1234",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "passcode_timeout",
                "pt": "global",
                "to": "15",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "lock_node_id",
                "pt": "global",
                "to": "26",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "code_length",
                "pt": "global",
                "to": "4",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "slot_offset",
                "pt": "global",
                "to": "2",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "offset_users",
                "pt": "global",
                "to": "[{\"slot\":0,\"name\":\"Lock button\"},{\"slot\":1,\"name\":\"Beavners\"}]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "devices_for_home",
                "pt": "global",
                "to": "[ { \"entity_id\": \"person.jay\" }, { \"entity_id\": \"person.kim\" } ]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "notify_devices",
                "pt": "global",
                "to": "['notify.ios_jay_iphone']",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "notify_on_lock",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "notify_manual_lock",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "notify_on_unlock",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "notify_manual_unlock",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "use_encryption",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "disable_all_codes_when_asleep",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "use_clearcode",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "log_manual_lock",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "log_manual_unlock",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "log_user_changes",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "log_scheduled_changes",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "keep_log_days",
                "pt": "global",
                "to": "14",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "61559655.9a0158",
        "type": "api-call-service",
        "z": "593fb5af.ec311c",
        "name": "",
        "server": "349447fb.a8b908",
        "version": 1,
        "service_domain": "lock",
        "service": "get_usercode",
        "entityId": "",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 930,
        "y": 140,
        "wires": [
            [
                "63051968.0d5618"
            ]
        ]
    },
    {
        "id": "ab90201d.404e5",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 140,
        "wires": [
            [
                "471e3e51.35264"
            ]
        ]
    },
    {
        "id": "471e3e51.35264",
        "type": "function",
        "z": "593fb5af.ec311c",
        "name": "build array",
        "func": "var nums = [];\nfor (var i = 2; i < 30; i++)\n    nums.push(i);\nmsg.payload = nums;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 140,
        "wires": [
            [
                "7669c156.b723e"
            ]
        ]
    },
    {
        "id": "7669c156.b723e",
        "type": "split",
        "z": "593fb5af.ec311c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 390,
        "y": 140,
        "wires": [
            [
                "40fe19f0.de79f8"
            ]
        ]
    },
    {
        "id": "40fe19f0.de79f8",
        "type": "function",
        "z": "593fb5af.ec311c",
        "name": "build array",
        "func": "const node_id = global.get(\"lock_node_id\");\nnode.status({ fill: \"blue\", shape:\"dot\", text: `node_id = ${node_id}` } );\nmsg.payload = {\n    \"node_id\": node_id, \"code_slot\": msg.payload\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 140,
        "wires": [
            [
                "317051c9.dfff9e"
            ]
        ]
    },
    {
        "id": "317051c9.dfff9e",
        "type": "change",
        "z": "593fb5af.ec311c",
        "name": "Set payload",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 140,
        "wires": [
            [
                "61559655.9a0158"
            ]
        ]
    },
    {
        "id": "2a11afd.9ff2a5",
        "type": "api-call-service",
        "z": "593fb5af.ec311c",
        "name": "",
        "server": "349447fb.a8b908",
        "version": 1,
        "service_domain": "lock",
        "service": "clear_usercode",
        "entityId": "",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 930,
        "y": 260,
        "wires": [
            [
                "63051968.0d5618"
            ]
        ]
    },
    {
        "id": "139887ea.c586f8",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 260,
        "wires": [
            [
                "256985a7.22c6ea"
            ]
        ]
    },
    {
        "id": "256985a7.22c6ea",
        "type": "function",
        "z": "593fb5af.ec311c",
        "name": "build array",
        "func": "var nums = [];\nfor (var i = 2; i < 30; i++)\n    nums.push(i);\nmsg.payload = nums;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 260,
        "wires": [
            [
                "c695f1e1.033bc"
            ]
        ]
    },
    {
        "id": "c695f1e1.033bc",
        "type": "split",
        "z": "593fb5af.ec311c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 400,
        "y": 260,
        "wires": [
            [
                "6ec7291b.0791f8"
            ]
        ]
    },
    {
        "id": "6ec7291b.0791f8",
        "type": "function",
        "z": "593fb5af.ec311c",
        "name": "build array",
        "func": "const node_id = global.get(\"lock_node_id\");\nmsg.payload = {\n    \"node_id\": node_id, \"code_slot\": msg.payload\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 260,
        "wires": [
            [
                "e0948f46.bba9a"
            ]
        ]
    },
    {
        "id": "e0948f46.bba9a",
        "type": "change",
        "z": "593fb5af.ec311c",
        "name": "Set payload",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 260,
        "wires": [
            [
                "2a11afd.9ff2a5"
            ]
        ]
    },
    {
        "id": "190767b4.a54518",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "### DEBUGGING ###",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "3886f651.4d39fa",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "Fetch",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 680,
        "wires": [
            [
                "74b952aa.fcedac"
            ]
        ]
    },
    {
        "id": "74b952aa.fcedac",
        "type": "mongodb3 in",
        "z": "593fb5af.ec311c",
        "service": "_ext_",
        "configNode": "7fbc5f5e.d45f6",
        "name": "Get Log",
        "collection": "LockLog",
        "operation": "find.toArray",
        "x": 240,
        "y": 680,
        "wires": [
            [
                "e46b2550.c4e428"
            ]
        ]
    },
    {
        "id": "e46b2550.c4e428",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 370,
        "y": 680,
        "wires": []
    },
    {
        "id": "5c844599.50701c",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "Get Logs",
        "info": "",
        "x": 100,
        "y": 640,
        "wires": []
    },
    {
        "id": "6f06c3b0.64f73c",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "Fetch",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 800,
        "wires": [
            [
                "db22b9d1.6529b8",
                "e75b450c.28f21"
            ]
        ]
    },
    {
        "id": "db22b9d1.6529b8",
        "type": "mongodb3 in",
        "z": "593fb5af.ec311c",
        "service": "_ext_",
        "configNode": "7fbc5f5e.d45f6",
        "name": "Get Users",
        "collection": "LockUsers",
        "operation": "find.toArray",
        "x": 240,
        "y": 800,
        "wires": [
            [
                "d09fb8c9.a69168"
            ]
        ]
    },
    {
        "id": "d09fb8c9.a69168",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 370,
        "y": 800,
        "wires": []
    },
    {
        "id": "fbf8f1e0.8ff13",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "Get Users",
        "info": "",
        "x": 100,
        "y": 760,
        "wires": []
    },
    {
        "id": "323d8633.83779a",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "Fetch",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 900,
        "wires": [
            [
                "71e60370.d43a8c"
            ]
        ]
    },
    {
        "id": "71e60370.d43a8c",
        "type": "mongodb3 in",
        "z": "593fb5af.ec311c",
        "service": "_ext_",
        "configNode": "7fbc5f5e.d45f6",
        "name": "Get Slots",
        "collection": "LockSlots",
        "operation": "find.toArray",
        "x": 240,
        "y": 900,
        "wires": [
            [
                "2b4982d1.f9033e"
            ]
        ]
    },
    {
        "id": "2b4982d1.f9033e",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 370,
        "y": 900,
        "wires": []
    },
    {
        "id": "9241d592.4ab0f8",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "Get Slots",
        "info": "",
        "x": 100,
        "y": 860,
        "wires": []
    },
    {
        "id": "9a675647.4453e8",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "### Mongo ###",
        "info": "",
        "x": 120,
        "y": 600,
        "wires": []
    },
    {
        "id": "1920499e.93f0a6",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 1000,
        "wires": [
            [
                "d6df689.ef86d98"
            ]
        ]
    },
    {
        "id": "5033e1e5.3d3a4",
        "type": "mongodb3 in",
        "z": "593fb5af.ec311c",
        "service": "_ext_",
        "configNode": "7fbc5f5e.d45f6",
        "name": "Clear Slots",
        "collection": "LockSlots",
        "operation": "deleteMany",
        "x": 390,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "d6df689.ef86d98",
        "type": "change",
        "z": "593fb5af.ec311c",
        "name": "slot > 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"slot\":{\"$gt\":1}},{}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 1000,
        "wires": [
            [
                "5033e1e5.3d3a4"
            ]
        ]
    },
    {
        "id": "6ceb7a63.fd9bc4",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "Clear Slots",
        "info": "",
        "x": 100,
        "y": 960,
        "wires": []
    },
    {
        "id": "474156e4.518c28",
        "type": "function",
        "z": "593fb5af.ec311c",
        "name": "Check flow vars",
        "func": "msg.payload = { \n    name: flow.get(\"name\"),\n    code: flow.get(\"code\"),\n    code_enabled: flow.get(\"code_enabled\"),\n    onetime: flow.get(\"onetime\"),\n    allow_when_home: flow.get(\"allow_when_home\"),\n    set_start: flow.get(\"set_start\"),\n    set_end: flow.get(\"set_end\"),\n    start_date: flow.get(\"start_date\"),\n    end_date: flow.get(\"end_date\"),\n    schedule: flow.get(\"schedule\"),\n    days: flow.get(\"days\"),\n    restrict_hours: flow.get(\"restrict_hours\"),\n    start_time: flow.get(\"start_time\"),\n    end_time: flow.get(\"end_time\"),\n    passcode: global.get(\"passcode\")\n};\nmsg.slots = global.get(\"slots\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 480,
        "wires": [
            [
                "5b967a17.9ab964"
            ]
        ]
    },
    {
        "id": "17ac2375.504cbd",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 480,
        "wires": [
            [
                "474156e4.518c28"
            ]
        ]
    },
    {
        "id": "5b967a17.9ab964",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 410,
        "y": 480,
        "wires": []
    },
    {
        "id": "9865b0ba.2c3a3",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "Get Flow Vars",
        "info": "",
        "x": 90,
        "y": 440,
        "wires": []
    },
    {
        "id": "4f291477.e5ab6c",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "### Clear all lock codes ###",
        "info": "",
        "x": 140,
        "y": 220,
        "wires": []
    },
    {
        "id": "9e459692.746e38",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "### Get all lock codes ###",
        "info": "",
        "x": 130,
        "y": 100,
        "wires": []
    },
    {
        "id": "cc70363a.6d4858",
        "type": "function",
        "z": "593fb5af.ec311c",
        "name": "build msg",
        "func": "msg.payload = \"Please check Home Assistant log for output.\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1300,
        "y": 200,
        "wires": [
            [
                "1ccd6a9e.d4f8c5"
            ]
        ]
    },
    {
        "id": "1ccd6a9e.d4f8c5",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1430,
        "y": 200,
        "wires": []
    },
    {
        "id": "63051968.0d5618",
        "type": "join",
        "z": "593fb5af.ec311c",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1150,
        "y": 200,
        "wires": [
            [
                "cc70363a.6d4858",
                "3c6d6837.d2a6a"
            ]
        ]
    },
    {
        "id": "3420c668.c2d8ba",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "Delete stored passcode",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 720,
        "y": 480,
        "wires": [
            [
                "20fe4ee0.df0332"
            ]
        ]
    },
    {
        "id": "20fe4ee0.df0332",
        "type": "change",
        "z": "593fb5af.ec311c",
        "name": "Delete passcode",
        "rules": [
            {
                "t": "set",
                "p": "passcode",
                "pt": "global",
                "to": "",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "9b430f1f.9fd8e",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "Delete global passcode",
        "info": "",
        "x": 700,
        "y": 440,
        "wires": []
    },
    {
        "id": "c6663354.daeec",
        "type": "function",
        "z": "702e3f6b.43278",
        "name": "lock notification",
        "func": "var _ = context.global.lodash;\nvar moment = context.global.moment;\n\nnode.status({ fill: \"blue\", shape:\"dot\", text: `Last notification at ${ moment().format('MMM D h:mm a') }` } );\n\nconst notify_devices = global.get(\"notify_devices\");\n\nconst data = { \n    message: msg.payload.status, \n    title: msg.payload.state\n}; \n\nif (_.isEmpty(notify_devices)) {\n    msg.payload = {\n        data: data\n    };\n    \n    return [null, msg];\n}\n\nmsg.payload = notify_devices;\nmsg.data = data;\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "x": 300,
        "y": 120,
        "wires": [
            [
                "68317eff.be435",
                "f07711f9.2b416"
            ],
            [
                "7e73b11d.d2189",
                "f07711f9.2b416"
            ]
        ]
    },
    {
        "id": "41e93222.8a3e9c",
        "type": "link out",
        "z": "eebb6675.799d48",
        "name": "Call Lock Notifications",
        "links": [
            "fce4b1f8.13e8a"
        ],
        "x": 895,
        "y": 140,
        "wires": []
    },
    {
        "id": "1e222539.05dcfb",
        "type": "link out",
        "z": "eebb6675.799d48",
        "name": "Call Bad Code Notification",
        "links": [
            "b52e856f.4ddff8"
        ],
        "x": 895,
        "y": 220,
        "wires": []
    },
    {
        "id": "454a9324.e77fec",
        "type": "switch",
        "z": "59474d53.1b40d4",
        "name": "Check logging conditions",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Door locked with code",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Door unlocked with code",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Door manually locked",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Door manually unlocked",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "User created",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "User updated",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "User deleted",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Scheduled code add",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Scheduled code delete",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 10,
        "x": 310,
        "y": 220,
        "wires": [
            [
                "d531314.fe4a9d"
            ],
            [
                "99868de3.786ee"
            ],
            [
                "e15c883e.35f0b8"
            ],
            [
                "60fd60d1.eeae7"
            ],
            [
                "19aa38e3.c2c7a7"
            ],
            [
                "19aa38e3.c2c7a7"
            ],
            [
                "19aa38e3.c2c7a7"
            ],
            [
                "8854c634.8a7ae8"
            ],
            [
                "8854c634.8a7ae8"
            ],
            [
                "1301a191.46c2ce"
            ]
        ]
    },
    {
        "id": "e15c883e.35f0b8",
        "type": "switch",
        "z": "59474d53.1b40d4",
        "name": "Logging flag (manual lock)",
        "property": "log_manual_lock",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 140,
        "wires": [
            [
                "9ce2b965.515558"
            ]
        ]
    },
    {
        "id": "60fd60d1.eeae7",
        "type": "switch",
        "z": "59474d53.1b40d4",
        "name": "Logging flag (manual unlock)",
        "property": "log_manual_unlock",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 180,
        "wires": [
            [
                "ea811994.f4ce78"
            ]
        ]
    },
    {
        "id": "19aa38e3.c2c7a7",
        "type": "switch",
        "z": "59474d53.1b40d4",
        "name": "Logging flag (user changes)",
        "property": "log_user_changes",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 220,
        "wires": [
            [
                "fdfcde86.4d29e"
            ]
        ]
    },
    {
        "id": "8854c634.8a7ae8",
        "type": "switch",
        "z": "59474d53.1b40d4",
        "name": "Logging flag (scheduled changes)",
        "property": "log_scheduled_changes",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 260,
        "wires": [
            [
                "965207.8202ddf8"
            ]
        ]
    },
    {
        "id": "b105ec94.c49e9",
        "type": "mongodb3 in",
        "z": "59474d53.1b40d4",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "Log Event",
        "collection": "LockLog",
        "operation": "insertOne",
        "x": 1160,
        "y": 60,
        "wires": [
            [
                "3138c752.aab248"
            ]
        ]
    },
    {
        "id": "d531314.fe4a9d",
        "type": "link out",
        "z": "59474d53.1b40d4",
        "name": "Call Write Log",
        "links": [
            "15936e4a.25dc32"
        ],
        "x": 535,
        "y": 60,
        "wires": []
    },
    {
        "id": "15936e4a.25dc32",
        "type": "link in",
        "z": "59474d53.1b40d4",
        "name": "Write Log",
        "links": [
            "d531314.fe4a9d",
            "99868de3.786ee",
            "9ce2b965.515558",
            "ea811994.f4ce78",
            "983abddd.1a118",
            "b7cf878b.3065e8",
            "ff7ac1a1.205d8",
            "ea551f45.d6a4f",
            "c857831e.0f446"
        ],
        "x": 1055,
        "y": 60,
        "wires": [
            [
                "b105ec94.c49e9"
            ]
        ]
    },
    {
        "id": "99868de3.786ee",
        "type": "link out",
        "z": "59474d53.1b40d4",
        "name": "Call Write Log",
        "links": [
            "15936e4a.25dc32"
        ],
        "x": 535,
        "y": 100,
        "wires": []
    },
    {
        "id": "9ce2b965.515558",
        "type": "link out",
        "z": "59474d53.1b40d4",
        "name": "Call Write Log",
        "links": [
            "15936e4a.25dc32"
        ],
        "x": 835,
        "y": 140,
        "wires": []
    },
    {
        "id": "ea811994.f4ce78",
        "type": "link out",
        "z": "59474d53.1b40d4",
        "name": "Call Write Log",
        "links": [
            "15936e4a.25dc32"
        ],
        "x": 835,
        "y": 180,
        "wires": []
    },
    {
        "id": "ea551f45.d6a4f",
        "type": "link out",
        "z": "59474d53.1b40d4",
        "name": "Call Write Log",
        "links": [
            "15936e4a.25dc32"
        ],
        "x": 1095,
        "y": 260,
        "wires": []
    },
    {
        "id": "ea5c9f94.245b4",
        "type": "link in",
        "z": "59474d53.1b40d4",
        "name": "Logging",
        "links": [
            "e536416a.f931",
            "92b0884a.b7e868",
            "4ffd98dd.f95938",
            "4d8569a.d098498",
            "2ba491b4.a3f3ae",
            "742c9dd6.231884",
            "7dd5d45f.97b71c",
            "288906ba.2ad8aa"
        ],
        "x": 95,
        "y": 200,
        "wires": [
            [
                "454a9324.e77fec",
                "a8f76afd.306c38"
            ]
        ]
    },
    {
        "id": "e536416a.f931",
        "type": "link out",
        "z": "eebb6675.799d48",
        "name": "Call Lock Logging",
        "links": [
            "ea5c9f94.245b4"
        ],
        "x": 895,
        "y": 180,
        "wires": []
    },
    {
        "id": "3138c752.aab248",
        "type": "debug",
        "z": "59474d53.1b40d4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1290,
        "y": 60,
        "wires": []
    },
    {
        "id": "73b71550.71df0c",
        "type": "function",
        "z": "59474d53.1b40d4",
        "name": "Build log message",
        "func": "var status = msg.data.new_state.attributes.lock_status;\nif (status.indexOf('user') == -1) {\n    // not a user code\n    msg.payload = {\n        state: `Door ${msg.payload}`,\n        type: msg.data.new_state.attributes.notification,\n        status: `Door ${msg.data.new_state.attributes.lock_status}`,\n        time: msg.data.new_state.last_updated\n    };\n    return msg;\n}\n\nconst slots = global.get(\"slots\");\nvar slot = Number(status.substring(status.lastIndexOf(' ') + 1));\n\nconst user = slots.find(u => u.slot === slot);\nif (user === undefined)\n    return [null, { payload: `Door was opened with a code that doesn't have a matching slot ${slot}. Good chance the lock.clear_usercode didn't work which means HA has probably been updated and I need to run the update zwave script` }];\n    \n\nvar m = {};\nm.user = user;\nm.slot = slot;\nm.slots = slots;\nm.status = msg.payload,\nm.payload = {\n    state: `Door ${msg.payload}`,\n    type: msg.data.new_state.attributes.notification,\n    og_status: msg.data.new_state.attributes.lock_status,\n    status: `${status.substring(0, status.indexOf('user') -  4)} by ${user.name}`,\n    time: msg.data.new_state.last_updated\n};\n\nreturn m;",
        "outputs": 2,
        "noerr": 0,
        "x": 290,
        "y": 420,
        "wires": [
            [
                "4a6d913e.7bea7"
            ],
            [
                "65157b1d.1048f4"
            ]
        ]
    },
    {
        "id": "4a6d913e.7bea7",
        "type": "debug",
        "z": "59474d53.1b40d4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 400,
        "wires": []
    },
    {
        "id": "65157b1d.1048f4",
        "type": "debug",
        "z": "59474d53.1b40d4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 570,
        "y": 440,
        "wires": []
    },
    {
        "id": "3ff8612b.2aaa1e",
        "type": "inject",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "topic": "",
        "payload": "Something secret that needs to stay secret",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 90,
        "y": 280,
        "wires": [
            [
                "ab5dcde8.dad06"
            ]
        ]
    },
    {
        "id": "b9498340.ed136",
        "type": "debug",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 610,
        "y": 280,
        "wires": []
    },
    {
        "id": "c61c95b0.05a298",
        "type": "switch",
        "z": "bae968bd.7a3cb8",
        "name": "Use encryption?",
        "property": "use_encryption",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 60,
        "wires": [
            [
                "f392ddb1.dae4e"
            ],
            []
        ]
    },
    {
        "id": "f392ddb1.dae4e",
        "type": "function",
        "z": "bae968bd.7a3cb8",
        "name": "Encrypt",
        "func": "const cryptojs = context.global.cryptojs;\n\nconst salt = global.get(\"encryption_key\");\n\nlet payload = msg.payload;\nif (typeof payload === 'object' && payload !== null)\n    payload = JSON.stringify(payload);\n\nmsg.payload = cryptojs.AES.encrypt(payload, salt).toString();\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "ab5dcde8.dad06",
        "type": "subflow:bae968bd.7a3cb8",
        "z": "e037ddc.bbf4a2",
        "x": 430,
        "y": 280,
        "wires": [
            [
                "b9498340.ed136",
                "f0791d4.b6eebe"
            ]
        ]
    },
    {
        "id": "8c1bca1e.b71368",
        "type": "switch",
        "z": "43717449.df2fbc",
        "name": "Use encryption?",
        "property": "use_encryption",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 80,
        "wires": [
            [
                "c2747add.afb318"
            ],
            []
        ]
    },
    {
        "id": "c2747add.afb318",
        "type": "function",
        "z": "43717449.df2fbc",
        "name": "decrypt",
        "func": "const cryptojs = context.global.cryptojs;\n\nconst salt = global.get(\"encryption_key\");\n\n// Decrypt\nlet bytes  = cryptojs.AES.decrypt(msg.payload, salt);\nlet hashed = msg.payload;\nmsg.payload = bytes.toString(cryptojs.enc.Utf8);\n\n// catching an error is not a great way to check\ntry {\n    let obj = JSON.parse(msg.payload);\n\n    if (obj && typeof obj === \"object\") {\n        obj.hashed = hashed;\n        msg.payload = obj;\n    }\n}\ncatch (e) { node.log(\"caught error\");}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "f0791d4.b6eebe",
        "type": "subflow:43717449.df2fbc",
        "z": "e037ddc.bbf4a2",
        "x": 430,
        "y": 320,
        "wires": [
            [
                "2dcc7b9d.90e394"
            ]
        ]
    },
    {
        "id": "95b6f8ec.52cc88",
        "type": "api-call-service",
        "z": "702e3f6b.43278",
        "name": "Notify - Device",
        "server": "349447fb.a8b908",
        "version": 1,
        "service_domain": "",
        "service": "",
        "entityId": "",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 900,
        "y": 200,
        "wires": [
            [
                "5a14bb8e.1f14a4"
            ]
        ]
    },
    {
        "id": "68317eff.be435",
        "type": "split",
        "z": "702e3f6b.43278",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 200,
        "wires": [
            [
                "60045692.cb90a8"
            ]
        ]
    },
    {
        "id": "60045692.cb90a8",
        "type": "function",
        "z": "702e3f6b.43278",
        "name": "Build service payload",
        "func": "const item = msg.payload.split('.');\nmsg.payload = {\n    domain: item[0],\n    service: item[1],\n    data: msg.data\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 200,
        "wires": [
            [
                "95b6f8ec.52cc88"
            ]
        ]
    },
    {
        "id": "5a14bb8e.1f14a4",
        "type": "join",
        "z": "702e3f6b.43278",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1050,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "7e73b11d.d2189",
        "type": "api-call-service",
        "z": "702e3f6b.43278",
        "name": "Notify - All",
        "server": "349447fb.a8b908",
        "version": 1,
        "service_domain": "notify",
        "service": "notify",
        "entityId": "",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 550,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "fce4b1f8.13e8a",
        "type": "link in",
        "z": "702e3f6b.43278",
        "name": "Lock Notifications",
        "links": [
            "41e93222.8a3e9c"
        ],
        "x": 175,
        "y": 120,
        "wires": [
            [
                "c6663354.daeec"
            ]
        ]
    },
    {
        "id": "6e78e1db.e7be7",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Check flow vars",
        "func": "msg.payload = { \n    name: flow.get(\"name\"),\n    code: flow.get(\"code\"),\n    code_enabled: flow.get(\"code_enabled\"),\n    onetime: flow.get(\"onetime\"),\n    allow_when_home: flow.get(\"allow_when_home\"),\n    set_start: flow.get(\"set_start\"),\n    set_end: flow.get(\"set_end\"),\n    start_date: flow.get(\"start_date\"),\n    end_date: flow.get(\"end_date\"),\n    schedule: flow.get(\"schedule\"),\n    days: flow.get(\"days\"),\n    restrict_hours: flow.get(\"restrict_hours\"),\n    start_time: flow.get(\"start_time\"),\n    end_time: flow.get(\"end_time\"),\n    passcode: global.get(\"passcode\")\n};\nmsg.slots = global.get(\"slots\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 2060,
        "wires": [
            [
                "99e36390.2fa29"
            ]
        ]
    },
    {
        "id": "307f6fa3.c953",
        "type": "inject",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 2060,
        "wires": [
            [
                "6e78e1db.e7be7"
            ]
        ]
    },
    {
        "id": "99e36390.2fa29",
        "type": "debug",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 410,
        "y": 2060,
        "wires": []
    },
    {
        "id": "bfb6ee2c.95b6e",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "Get Flow Vars",
        "info": "",
        "x": 90,
        "y": 2020,
        "wires": []
    },
    {
        "id": "b0b1ff04.ffee3",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "Fetch",
        "topic": "",
        "payload": "{\"user\":\"U2FsdGVkX18wz553MvB/Fl29LUZq1PrfzPHDwpgZlvIOZmLLQWRUK+oNS4IeyozMyvzi6guGNhH+cS2hH2/IzvT4UOcRyH1Fi9Kv/Vv7PivSIyFc9i50PiDJMnuvYpR0MICz0L69YY2XDTcx4U6aYGo2BYU6pN2WZjpgWTfs4sBNn51m8Xgf+SK2itbC51w5AFyfdx0ocJKJJO5HtPklWy5vLTQOGZoxFGLR7IgZSTIQPdzA5ujmz5oOKYgt2oqoF9wFxtoUQmvUHceXU+U2mTU5+upN/sXlj8z/XKeww7htkJGMp3rZ0bRvAvaXceJypO2l/epCVdCsszrkuj0pCULfVP5tFdlETYj2f3CqK+frNextjQzHkrbx8k7s0/uF\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 730,
        "y": 680,
        "wires": [
            [
                "83bf703e.3968"
            ]
        ]
    },
    {
        "id": "83bf703e.3968",
        "type": "mongodb3 in",
        "z": "593fb5af.ec311c",
        "service": "_ext_",
        "configNode": "7fbc5f5e.d45f6",
        "name": "Delete",
        "collection": "LockUsers",
        "operation": "deleteOne",
        "x": 850,
        "y": 680,
        "wires": [
            [
                "79f1dc96.84a234"
            ]
        ]
    },
    {
        "id": "79f1dc96.84a234",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 990,
        "y": 680,
        "wires": []
    },
    {
        "id": "8c417e6.0cc8c8",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "Delete by _id",
        "info": "",
        "x": 730,
        "y": 640,
        "wires": []
    },
    {
        "id": "168bdfd.2d7ad2",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "Fetch",
        "topic": "",
        "payload": "{\"name\": \"Test\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 730,
        "y": 780,
        "wires": [
            [
                "fdb01b61.1e4708"
            ]
        ]
    },
    {
        "id": "fdb01b61.1e4708",
        "type": "mongodb3 in",
        "z": "593fb5af.ec311c",
        "service": "_ext_",
        "configNode": "7fbc5f5e.d45f6",
        "name": "Find",
        "collection": "LockManager",
        "operation": "findOneAndDelete",
        "x": 850,
        "y": 780,
        "wires": [
            [
                "c7eba276.9f09d"
            ]
        ]
    },
    {
        "id": "c7eba276.9f09d",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 990,
        "y": 780,
        "wires": []
    },
    {
        "id": "e78e53bb.c4611",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "Get by _id",
        "info": "",
        "x": 720,
        "y": 740,
        "wires": []
    },
    {
        "id": "65b5595d.a95258",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Format Date",
        "func": "var moment = context.global.moment;\n\nmsg.payload = moment(msg.payload).format('M/D/YY')\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 860,
        "wires": [
            [
                "e305175c.d07a58"
            ]
        ]
    },
    {
        "id": "b5cb2277.59a4c",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Format Date",
        "func": "var moment = context.global.moment;\n\nmsg.payload = moment(msg.payload).format('M/D/YY')\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 900,
        "wires": [
            [
                "b625e4f0.7018f8"
            ]
        ]
    },
    {
        "id": "e4f083b.178098",
        "type": "comment",
        "z": "702e3f6b.43278",
        "name": "Lock/unlock activities",
        "info": "",
        "x": 260,
        "y": 80,
        "wires": []
    },
    {
        "id": "1f914ffa.6dd24",
        "type": "function",
        "z": "702e3f6b.43278",
        "name": "user notification",
        "func": "var _ = context.global.lodash;\nvar moment = context.global.moment;\n\nnode.status({ fill: \"blue\", shape:\"dot\", text: `Last notification at ${ moment().format('MMM D h:mm a') }` } );\n\nconst notify_devices = global.get(\"notify_devices\");\nconst action = global.get(\"user_type\");\n\nconst data = { \n    message: `${msg.name} [${msg.code}] was ${action.toLowerCase()}`, \n    title: `Lock Manager - User ${action}`\n}; \n\nif (_.isEmpty(notify_devices)) {\n    msg.payload = {\n        data: data\n    };\n    \n    return [null, msg];\n}\n\nmsg.payload = notify_devices;\nmsg.data = data;\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "x": 300,
        "y": 220,
        "wires": [
            [
                "68317eff.be435",
                "874e682d.394508"
            ],
            [
                "7e73b11d.d2189",
                "874e682d.394508"
            ]
        ]
    },
    {
        "id": "f1548826.e64d88",
        "type": "link in",
        "z": "702e3f6b.43278",
        "name": "User Notifications",
        "links": [
            "94b5224b.84b76",
            "ac5b99d.dfb3468"
        ],
        "x": 175,
        "y": 220,
        "wires": [
            [
                "1f914ffa.6dd24",
                "5e15793a.918e28"
            ]
        ]
    },
    {
        "id": "a7cb2b36.be6478",
        "type": "comment",
        "z": "702e3f6b.43278",
        "name": "Create/update/delete user",
        "info": "",
        "x": 270,
        "y": 180,
        "wires": []
    },
    {
        "id": "94b5224b.84b76",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Call user notification",
        "links": [
            "f1548826.e64d88"
        ],
        "x": 915,
        "y": 1420,
        "wires": []
    },
    {
        "id": "ac5b99d.dfb3468",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Call user notification",
        "links": [
            "f1548826.e64d88"
        ],
        "x": 1055,
        "y": 1640,
        "wires": []
    },
    {
        "id": "6a5a542f.be06ec",
        "type": "function",
        "z": "702e3f6b.43278",
        "name": "scheduled notification",
        "func": "var _ = context.global.lodash;\nvar moment = context.global.moment;\n\nnode.status({ fill: \"blue\", shape:\"dot\", text: `Last notification at ${ moment().format('MMM D h:mm a') }` } );\n\nconst notify_devices = global.get(\"notify_devices\");\n\nconst data = { \n    message: `${msg.name} was ${msg.action.toLowerCase()} at ${ moment().format('MMM D h:mm a') }`, \n    title: `Lock Manager - Lock usercode ${msg.action}`\n}; \n\nif (_.isEmpty(notify_devices)) {\n    msg.payload = {\n        data: data\n    };\n    \n    return [null, msg];\n}\n\nmsg.payload = notify_devices;\nmsg.data = data;\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "x": 320,
        "y": 380,
        "wires": [
            [
                "68317eff.be435",
                "8d469f2f.33701"
            ],
            [
                "7e73b11d.d2189",
                "8d469f2f.33701"
            ]
        ]
    },
    {
        "id": "89cbdfdc.370cf",
        "type": "link in",
        "z": "702e3f6b.43278",
        "name": "Scheduled Notifications",
        "links": [
            "3ecfcfe.5d763b",
            "ec72db19.67b47",
            "2673a6c4.df8b7a"
        ],
        "x": 175,
        "y": 380,
        "wires": [
            [
                "6a5a542f.be06ec",
                "2864c11b.3f999e"
            ]
        ]
    },
    {
        "id": "b9de9ab4.e4e2b8",
        "type": "comment",
        "z": "702e3f6b.43278",
        "name": "scheduled activities",
        "info": "",
        "x": 250,
        "y": 340,
        "wires": []
    },
    {
        "id": "6885d866.a7dae8",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "Fetch",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 730,
        "y": 960,
        "wires": [
            [
                "8ce0f7ef.d63848"
            ]
        ]
    },
    {
        "id": "8ce0f7ef.d63848",
        "type": "function",
        "z": "593fb5af.ec311c",
        "name": "",
        "func": "var code = '0046';\nvar name = 'Kristen'\n\nvar user = { payload: [\n    {\n        \"code\": code, \n        \"name\": name\n    },\n    {}\n]};\nvar slot = { payload: {\"name\": name } };\n\nreturn [user, slot];",
        "outputs": 2,
        "noerr": 0,
        "x": 850,
        "y": 960,
        "wires": [
            [
                "9a97e3a9.d2b5f"
            ],
            [
                "88dceb56.551518"
            ]
        ]
    },
    {
        "id": "9a97e3a9.d2b5f",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1010,
        "y": 920,
        "wires": []
    },
    {
        "id": "88dceb56.551518",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1010,
        "y": 980,
        "wires": []
    },
    {
        "id": "7a366aaf.97a764",
        "type": "function",
        "z": "593fb5af.ec311c",
        "name": "",
        "func": "var code = '0046';\nvar name = 'Kristen'\nvar user_query = [\n    {\n        \"code\": code, \n        \"name\": name\n    },\n    {}\n];\nvar user = {};\nuser.payload = user_query;\n\nvar slot_query = { \"name\": name };\nvar slot = {};\nslot.payload = slot_query;\n\nreturn [user, slot];",
        "outputs": 2,
        "noerr": 0,
        "x": 870,
        "y": 1000,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e2b11f71.91bbe",
        "type": "function",
        "z": "85b5cbfc.b785c8",
        "name": "Next Slot",
        "func": "// This generates a list of possible slots and the next slot. Index is 0-based and slots start\n// at 1 so it needs to offset 1 to account for that. If the slot_offset var\n// is set then that's added to get the true starting slot\n// and slots need to start with 1 AND the first slot is our main code that isn't\n// a part of this.\nconst _ = context.global.lodash;\n\nlet offset = global.get(\"slot_offset\") + 1;\nlet allSlots = Array.from({length: 31 - offset}, (v, k) => k + offset);\n\nlet usedSlots = _.map(Object.keys(msg.payload).map(key => msg.payload[key]), 'slot');\nnode.log(`USED SLOTS - ${usedSlots}`);\nlet difference = _.difference(allSlots, usedSlots);\n\nlet nextSlot = _.head(difference);\nnode.log(`next slot is ${nextSlot}`);\nmsg.slot = nextSlot;\n\nlet status = { payload: { fill: \"blue\", shape:\"dot\", text: `next slot ${nextSlot}` } };\n\nreturn [msg, status];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 500,
        "y": 80,
        "wires": [
            [
                "4d9d608.3b016a"
            ],
            []
        ]
    },
    {
        "id": "6b35b6b7.e4ae98",
        "type": "change",
        "z": "85b5cbfc.b785c8",
        "name": "Backup payload",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "payload_bak",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "b9dd7adb.3ef22"
            ]
        ]
    },
    {
        "id": "4d9d608.3b016a",
        "type": "change",
        "z": "85b5cbfc.b785c8",
        "name": "Restore payload",
        "rules": [
            {
                "t": "move",
                "p": "payload_bak",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "8d469f2f.33701",
        "type": "debug",
        "z": "702e3f6b.43278",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 380,
        "wires": []
    },
    {
        "id": "874e682d.394508",
        "type": "debug",
        "z": "702e3f6b.43278",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 280,
        "wires": []
    },
    {
        "id": "f07711f9.2b416",
        "type": "debug",
        "z": "702e3f6b.43278",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 120,
        "wires": []
    },
    {
        "id": "d796df4b.54cea",
        "type": "debug",
        "z": "4d149fd1.afec5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 290,
        "y": 600,
        "wires": []
    },
    {
        "id": "800060ee.083d3",
        "type": "debug",
        "z": "4d149fd1.afec5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 130,
        "y": 600,
        "wires": []
    },
    {
        "id": "5e15793a.918e28",
        "type": "debug",
        "z": "702e3f6b.43278",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 270,
        "y": 280,
        "wires": []
    },
    {
        "id": "2864c11b.3f999e",
        "type": "debug",
        "z": "702e3f6b.43278",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 270,
        "y": 440,
        "wires": []
    },
    {
        "id": "bdb33ddd.2508",
        "type": "function",
        "z": "4d149fd1.afec5",
        "name": "Relock keypad",
        "func": "const moment = context.global.moment;\n\nasync function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function reset() {\n    const sleepFor = global.get(\"passcode_timeout\") * 1000;\n    await sleep(sleepFor);\n    global.set(\"passcode\", undefined);\n    node.status({ fill: \"red\", shape:\"dot\", text: `locked` } );\n    node.send({});\n}\n\nnode.status({ fill: \"blue\", shape:\"dot\", text: `locking at ${moment().add(60, 'seconds').format('hh:mm A')}` } );\nreset();\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "x": 1100,
        "y": 60,
        "wires": [
            [
                "2d934ca9.6350d4"
            ]
        ]
    },
    {
        "id": "2d934ca9.6350d4",
        "type": "link out",
        "z": "4d149fd1.afec5",
        "name": "Invalid Passcode",
        "links": [
            "dfc7579e.988318"
        ],
        "x": 1215,
        "y": 60,
        "wires": []
    },
    {
        "id": "d57908ec.c14c68",
        "type": "comment",
        "z": "eebb6675.799d48",
        "name": "### PRESENCE AWARENESS ###",
        "info": "",
        "x": 160,
        "y": 440,
        "wires": []
    },
    {
        "id": "309a7e24.6fbc02",
        "type": "api-current-state",
        "z": "eebb6675.799d48",
        "name": "Get Presence",
        "server": "349447fb.a8b908",
        "version": 1,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "override_topic": false,
        "entity_id": "",
        "state_type": "str",
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "blockInputOverrides": false,
        "x": 520,
        "y": 480,
        "wires": [
            [
                "e5270298.08336"
            ]
        ]
    },
    {
        "id": "3545fc57.2c0614",
        "type": "function",
        "z": "eebb6675.799d48",
        "name": "Evaluate",
        "func": "const _ = context.global.lodash;\nconst moment = context.global.moment;\n\nconst locations = msg.payload;\n\nmsg.locations = locations;\nlet presence = \"\";\n\nif (_.every(locations, function(location) { return location === \"home\"; }))\n    presence = \"all_home\";\nelse if (_.some(locations, function(location) { return location === \"home\"; }))\n    presence = \"some_home\";\nelse if (!_.some(locations, function(location) { return location === \"home\"; }))\n    presence = \"all_away\";\n\nglobal.set(\"presence\", presence);\nnode.status({ fill: \"blue\", shape:\"dot\", text: `${presence} at ${moment().format(\"h:mm a\")}` });\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "4337658.a648a9c",
        "type": "change",
        "z": "eebb6675.799d48",
        "name": "Get Devices",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "devices_for_home",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 480,
        "wires": [
            [
                "2299b7ef.c0e1e8"
            ]
        ]
    },
    {
        "id": "2299b7ef.c0e1e8",
        "type": "split",
        "z": "eebb6675.799d48",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 370,
        "y": 480,
        "wires": [
            [
                "309a7e24.6fbc02"
            ]
        ]
    },
    {
        "id": "e5270298.08336",
        "type": "join",
        "z": "eebb6675.799d48",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 670,
        "y": 480,
        "wires": [
            [
                "3545fc57.2c0614"
            ]
        ]
    },
    {
        "id": "1a30ada1.b0cc02",
        "type": "inject",
        "z": "eebb6675.799d48",
        "name": "Poll",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 90,
        "y": 480,
        "wires": [
            [
                "4337658.a648a9c"
            ]
        ]
    },
    {
        "id": "16de4eea.b05961",
        "type": "random",
        "z": "b93cc620.a18cb8",
        "name": "",
        "low": "0",
        "high": "9",
        "inte": "true",
        "property": "payload",
        "x": 340,
        "y": 100,
        "wires": [
            [
                "52dc6c7b.f04b94"
            ]
        ]
    },
    {
        "id": "52dc6c7b.f04b94",
        "type": "function",
        "z": "b93cc620.a18cb8",
        "name": "concat number",
        "func": "const digit = msg.payload;\nif (msg.random_code === undefined) msg.random_code = '';\nmsg.random_code = `${msg.random_code}${digit}`;\nif (msg.random_code.length < global.get(\"code_length\"))\n    return msg;\n\nlet status = { payload: { fill: \"blue\", shape:\"dot\", text: `code ${msg.random_code}` } };\nreturn [null, msg, status];\n",
        "outputs": 3,
        "noerr": 0,
        "x": 500,
        "y": 100,
        "wires": [
            [
                "9c944663.049ea8"
            ],
            [
                "a1675988.0e8e88"
            ],
            []
        ]
    },
    {
        "id": "9c944663.049ea8",
        "type": "link out",
        "z": "b93cc620.a18cb8",
        "name": "Call generate number",
        "links": [
            "4e2e4573.cac48c"
        ],
        "x": 635,
        "y": 60,
        "wires": []
    },
    {
        "id": "4e2e4573.cac48c",
        "type": "link in",
        "z": "b93cc620.a18cb8",
        "name": "Generate number",
        "links": [
            "9c944663.049ea8"
        ],
        "x": 255,
        "y": 140,
        "wires": [
            [
                "16de4eea.b05961"
            ]
        ]
    },
    {
        "id": "2a00346.ad6f6cc",
        "type": "subflow:b93cc620.a18cb8",
        "z": "593fb5af.ec311c",
        "name": "Generate random code",
        "env": [],
        "x": 290,
        "y": 1220,
        "wires": [
            [
                "4305237b.4e2d6c"
            ]
        ]
    },
    {
        "id": "c578514b.2f78b",
        "type": "comment",
        "z": "b93cc620.a18cb8",
        "name": "Generate random number",
        "info": "This generates a random number as long as the code length specified. It's more complicated\nthan it needs to be because I wanted to generate codes that start with 0. So something like\n0045 can be generated.",
        "x": 150,
        "y": 60,
        "wires": []
    },
    {
        "id": "2f9beb38.925474",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 90,
        "y": 1200,
        "wires": [
            [
                "2a00346.ad6f6cc",
                "482919f3.590c18"
            ]
        ]
    },
    {
        "id": "4305237b.4e2d6c",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 490,
        "y": 1220,
        "wires": []
    },
    {
        "id": "461aa5bd.03f02c",
        "type": "inject",
        "z": "2994561d.23b94a",
        "name": "",
        "topic": "",
        "payload": "{\"slot\":9,\"name\":\"Test\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 90,
        "y": 80,
        "wires": [
            [
                "a13a7b77.6013b8"
            ]
        ]
    },
    {
        "id": "408f83ca.0d2cec",
        "type": "change",
        "z": "b93cc620.a18cb8",
        "name": "Backup payload",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "backup",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 100,
        "wires": [
            [
                "16de4eea.b05961"
            ]
        ]
    },
    {
        "id": "a1675988.0e8e88",
        "type": "change",
        "z": "b93cc620.a18cb8",
        "name": "Restore payload",
        "rules": [
            {
                "t": "move",
                "p": "backup",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "482919f3.590c18",
        "type": "subflow:85b5cbfc.b785c8",
        "z": "593fb5af.ec311c",
        "name": "",
        "x": 270,
        "y": 1160,
        "wires": [
            [
                "eb07f7b2.932f58"
            ]
        ]
    },
    {
        "id": "eb07f7b2.932f58",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 410,
        "y": 1160,
        "wires": []
    },
    {
        "id": "707563b9.14acac",
        "type": "mongodb3 in",
        "z": "956006f5.f494f8",
        "service": "_ext_",
        "configNode": "7555299e.f56478",
        "name": "Get Slots",
        "collection": "LockSlots",
        "operation": "find.toArray",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "1f1338cf.d02bb7"
            ]
        ]
    },
    {
        "id": "108bab9.fe05a54",
        "type": "debug",
        "z": "4d149fd1.afec5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 280,
        "wires": []
    },
    {
        "id": "db465d2e.f9e81",
        "type": "debug",
        "z": "4d149fd1.afec5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 910,
        "y": 320,
        "wires": []
    },
    {
        "id": "b81bb0c4.f258d",
        "type": "debug",
        "z": "4d149fd1.afec5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 910,
        "y": 400,
        "wires": []
    },
    {
        "id": "76a3068.47590f8",
        "type": "comment",
        "z": "4d149fd1.afec5",
        "name": "Check for codes to add or remove every 60 seconds",
        "info": "",
        "x": 210,
        "y": 280,
        "wires": []
    },
    {
        "id": "bc2d0432.a76638",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Set vars",
        "rules": [
            {
                "t": "set",
                "p": "code",
                "pt": "msg",
                "to": "code",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "name",
                "pt": "msg",
                "to": "name",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "User saved",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1380,
        "wires": [
            [
                "be53a62.c44e458",
                "94b5224b.84b76"
            ]
        ]
    },
    {
        "id": "b2c2420f.da4ca",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "store",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "x": 110,
        "y": 1540,
        "wires": [
            [
                "95bb127e.e6a57"
            ]
        ]
    },
    {
        "id": "97bd3c32.a1d9a",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "test",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 110,
        "y": 1581,
        "wires": [
            [
                "1ab6ef63.b63221"
            ]
        ]
    },
    {
        "id": "1ab6ef63.b63221",
        "type": "function",
        "z": "593fb5af.ec311c",
        "name": "",
        "func": "var helpers = global.get(\"helpers\");\nnode.log(helpers.examples());\nlet t = \"abc\";\nlet bob = {};\nlet bill = {a: 1};\n\nnode.log(typeof bob === 'object' && bob !== null);\nnode.log(typeof t === 'object' && t !== null);\nnode.log(helpers.isEmpty(bob));\nnode.log(helpers.isEmpty(bill));\n\nObject.prototype.isEmpty2 = function() {\n    node.log(\"made it 2\");\n    return !Object.getOwnPropertySymbols(this).length && !Object.getOwnPropertyNames(this).length;\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 1581,
        "wires": [
            [
                "1f2a0325.2403dd"
            ]
        ]
    },
    {
        "id": "1f2a0325.2403dd",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 370,
        "y": 1580,
        "wires": []
    },
    {
        "id": "95bb127e.e6a57",
        "type": "function",
        "z": "593fb5af.ec311c",
        "name": "",
        "func": "class Helpers {\n\n  constructor(name, fierce){\n    this._name = name;\n    this._fierce = fierce;\n  }\n\n  static examples() {\n    return `Some examples of animals are Lion, Elephant, Sheep, Rhinocerus etc`\n  }\n\nstatic isEmpty(obj) {\n    node.log(\"made it 2\");\n    return !Object.getOwnPropertySymbols(obj).length && !Object.getOwnPropertyNames(obj).length;\n}\n\n}\n\nglobal.set(\"helpers\", Helpers);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "8bc353a2.b7565",
        "type": "mongodb3 in",
        "z": "2994561d.23b94a",
        "service": "_ext_",
        "configNode": "7fbc5f5e.d45f6",
        "name": "Get User Slot",
        "collection": "LockSlots",
        "operation": "findOne",
        "x": 700,
        "y": 100,
        "wires": [
            [
                "81efa95f.1859c8"
            ]
        ]
    },
    {
        "id": "81efa95f.1859c8",
        "type": "function",
        "z": "2994561d.23b94a",
        "name": "Slot found",
        "func": "const _ = context.global.lodash;\n\nif (!_.isEmpty(msg.payload)) {\n    node.status({ fill: \"blue\", shape: \"dot\", text: \"continuing\" });\n    return { slot: msg.payload.slot, name: msg.name };\n} else {\n    node.status({ fill: \"green\", shape: \"dot\", text: \"stopping\" });\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 100,
        "wires": [
            [
                "f688e022.fbeac"
            ]
        ]
    },
    {
        "id": "16fcd03a.89631",
        "type": "function",
        "z": "2994561d.23b94a",
        "name": "Build query",
        "func": "msg.payload = {name: msg.name};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 100,
        "wires": [
            [
                "8bc353a2.b7565"
            ]
        ]
    },
    {
        "id": "5643e1a8.64ae2",
        "type": "mongodb3 in",
        "z": "2994561d.23b94a",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "Delete Slot",
        "collection": "LockSlots",
        "operation": "deleteOne",
        "x": 630,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "26813fa1.394b8",
        "type": "api-call-service",
        "z": "2994561d.23b94a",
        "name": "Overwrite Lock Code",
        "server": "349447fb.a8b908",
        "version": 1,
        "service_domain": "lock",
        "service": "set_usercode",
        "entityId": "",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 660,
        "y": 420,
        "wires": [
            [
                "6c9c9fb9.ebd8d"
            ]
        ]
    },
    {
        "id": "eb1e0537.cea8a8",
        "type": "function",
        "z": "2994561d.23b94a",
        "name": "Delete lock code and slot user",
        "func": "let slot = msg.slot === undefined ? msg.payload.slot : msg.slot;\nlet name = msg.name === undefined ? msg.payload.name : msg.name;\n\nlet mongo = {\n    payload: [\n        {\n            slot: slot,\n            name: name\n        },\n        {}\n    ]\n};\nlet lock = { \n    payload: { \n        data: {\n            node_id: global.get(\"lock_node_id\"),\n            code_slot: slot,\n            usercode: msg.random_code\n        }\n    }\n};\n\nlet notification = { name: name, action: 'Added' };\n\nreturn [mongo, lock, notification];\n",
        "outputs": 3,
        "noerr": 0,
        "x": 390,
        "y": 420,
        "wires": [
            [
                "5643e1a8.64ae2"
            ],
            [
                "26813fa1.394b8"
            ],
            [
                "8c4e92ea.57902"
            ]
        ]
    },
    {
        "id": "961b4e44.5fba8",
        "type": "api-call-service",
        "z": "2994561d.23b94a",
        "name": "Clear Lock Code",
        "server": "349447fb.a8b908",
        "version": 1,
        "service_domain": "lock",
        "service": "clear_usercode",
        "entityId": "",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 1250,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "24136372.deb41c",
        "type": "subflow:b93cc620.a18cb8",
        "z": "2994561d.23b94a",
        "name": "Gen Code",
        "env": [],
        "x": 150,
        "y": 420,
        "wires": [
            [
                "eb1e0537.cea8a8"
            ]
        ]
    },
    {
        "id": "94239e4c.c3b14",
        "type": "change",
        "z": "2994561d.23b94a",
        "name": "Format payload",
        "rules": [
            {
                "t": "delete",
                "p": "payload.data.usercode",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 420,
        "wires": [
            [
                "961b4e44.5fba8"
            ]
        ]
    },
    {
        "id": "6c9c9fb9.ebd8d",
        "type": "switch",
        "z": "2994561d.23b94a",
        "name": "Clear code enabled",
        "property": "use_clearcode",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 870,
        "y": 420,
        "wires": [
            [
                "94239e4c.c3b14"
            ]
        ]
    },
    {
        "id": "8c4e92ea.57902",
        "type": "link out",
        "z": "2994561d.23b94a",
        "name": "Call scheduled notification (disable)",
        "links": [],
        "x": 575,
        "y": 480,
        "wires": []
    },
    {
        "id": "d2232d6d.8aeb1",
        "type": "link in",
        "z": "2994561d.23b94a",
        "name": "Gen Code",
        "links": [
            "71b419fc.0518b8",
            "f688e022.fbeac",
            "d469a8d3.c00208",
            "88dd0817.5f248"
        ],
        "x": 55,
        "y": 420,
        "wires": [
            [
                "24136372.deb41c"
            ]
        ]
    },
    {
        "id": "71b419fc.0518b8",
        "type": "link out",
        "z": "2994561d.23b94a",
        "name": "Call Gen Code",
        "links": [
            "d2232d6d.8aeb1"
        ],
        "x": 475,
        "y": 180,
        "wires": []
    },
    {
        "id": "f688e022.fbeac",
        "type": "link out",
        "z": "2994561d.23b94a",
        "name": "Call Gen Code",
        "links": [
            "d2232d6d.8aeb1"
        ],
        "x": 975,
        "y": 100,
        "wires": []
    },
    {
        "id": "a4b579a7.21f138",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "Test Subflows",
        "info": "",
        "x": 90,
        "y": 1140,
        "wires": []
    },
    {
        "id": "37b6f9ab.601b76",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "Messing with global functions",
        "info": "",
        "x": 140,
        "y": 1500,
        "wires": []
    },
    {
        "id": "2dcc7b9d.90e394",
        "type": "debug",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "cd420835.830918",
        "type": "switch",
        "z": "e037ddc.bbf4a2",
        "name": "Use encryption?",
        "property": "use_encryption",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a8f76afd.306c38",
        "type": "debug",
        "z": "59474d53.1b40d4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 250,
        "y": 100,
        "wires": []
    },
    {
        "id": "2120cd5d.5d5672",
        "type": "function",
        "z": "56145c0c.026bc4",
        "name": "Convert to Array of Objects",
        "func": "msg.payload = Object.keys(msg.payload).map(key => msg.payload[key]);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "134d8b9b.f92ca4",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "Fetch",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 730,
        "y": 840,
        "wires": [
            [
                "8c6e427d.0ff3d"
            ]
        ]
    },
    {
        "id": "c6cdd139.3663a",
        "type": "mongodb3 in",
        "z": "593fb5af.ec311c",
        "service": "_ext_",
        "configNode": "7fbc5f5e.d45f6",
        "name": "Delete",
        "collection": "LockManager",
        "operation": "deleteOne",
        "x": 990,
        "y": 860,
        "wires": [
            [
                "74edfb43.66a824"
            ]
        ]
    },
    {
        "id": "74edfb43.66a824",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1130,
        "y": 860,
        "wires": []
    },
    {
        "id": "8c6e427d.0ff3d",
        "type": "function",
        "z": "593fb5af.ec311c",
        "name": "",
        "func": "return { \"_id\": \"5d482ae843f7a77acaf9b24d\" }",
        "outputs": 2,
        "noerr": 0,
        "x": 850,
        "y": 880,
        "wires": [
            [
                "c6cdd139.3663a"
            ],
            []
        ]
    },
    {
        "id": "2fd7edc2.e84a12",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "Fetch",
        "topic": "",
        "payload": "{ }",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 710,
        "y": 1100,
        "wires": [
            [
                "115715db.7e808a"
            ]
        ]
    },
    {
        "id": "115715db.7e808a",
        "type": "mongodb3 in",
        "z": "593fb5af.ec311c",
        "service": "_ext_",
        "configNode": "7fbc5f5e.d45f6",
        "name": "Delete",
        "collection": "LockUsers",
        "operation": "deleteMany",
        "x": 830,
        "y": 1100,
        "wires": [
            [
                "32f3a819.b3aad8"
            ]
        ]
    },
    {
        "id": "32f3a819.b3aad8",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 970,
        "y": 1100,
        "wires": []
    },
    {
        "id": "77d4baa9.6858a4",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "Truncate LockUsers table",
        "info": "",
        "x": 750,
        "y": 1060,
        "wires": []
    },
    {
        "id": "3d9a9ddc.3ff2e2",
        "type": "subflow:bae968bd.7a3cb8",
        "z": "e037ddc.bbf4a2",
        "x": 950,
        "y": 80,
        "wires": [
            [
                "7b2235e.95970cc"
            ]
        ]
    },
    {
        "id": "7b2235e.95970cc",
        "type": "function",
        "z": "e037ddc.bbf4a2",
        "name": "Query",
        "func": "let q = { payload: [\n    { \n        user: msg.payload\n    },\n    { forceServerObjectId: true }\n]};\nreturn q;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1110,
        "y": 80,
        "wires": [
            [
                "80652175.1aa0a"
            ]
        ]
    },
    {
        "id": "80652175.1aa0a",
        "type": "mongodb3 in",
        "z": "e037ddc.bbf4a2",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "insert",
        "collection": "LockUsers",
        "operation": "insertOne",
        "x": 1230,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "a8bfb1b.aee9f5",
        "type": "inject",
        "z": "e037ddc.bbf4a2",
        "name": "ForEach",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 640,
        "y": 80,
        "wires": [
            [
                "c0a2de94.d7e03"
            ]
        ]
    },
    {
        "id": "c0a2de94.d7e03",
        "type": "mongodb3 in",
        "z": "e037ddc.bbf4a2",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "forEach",
        "collection": "LockManager",
        "operation": "find.forEach",
        "x": 780,
        "y": 80,
        "wires": [
            [
                "3d9a9ddc.3ff2e2"
            ]
        ]
    },
    {
        "id": "98be4aa5.9555c8",
        "type": "comment",
        "z": "e037ddc.bbf4a2",
        "name": "### Build encrypted LockUsers from LockManager ###",
        "info": "",
        "x": 760,
        "y": 40,
        "wires": []
    },
    {
        "id": "c9749e4f.153b7",
        "type": "change",
        "z": "cd3e33e6.2da5b",
        "name": "Prep query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 80,
        "wires": [
            [
                "26324fb.902a8b"
            ]
        ]
    },
    {
        "id": "26324fb.902a8b",
        "type": "mongodb3 in",
        "z": "cd3e33e6.2da5b",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "Get users",
        "collection": "LockUsers",
        "operation": "find.toArray",
        "x": 320,
        "y": 80,
        "wires": [
            [
                "9512aabc.75d858"
            ]
        ]
    },
    {
        "id": "9512aabc.75d858",
        "type": "subflow:56145c0c.026bc4",
        "z": "cd3e33e6.2da5b",
        "name": "",
        "env": [],
        "x": 480,
        "y": 80,
        "wires": [
            [
                "6b7de44d.b2462c"
            ]
        ]
    },
    {
        "id": "6b7de44d.b2462c",
        "type": "switch",
        "z": "cd3e33e6.2da5b",
        "name": "Use encryption?",
        "property": "use_encryption",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 660,
        "y": 80,
        "wires": [
            [
                "8fcc4c30.88ec2"
            ],
            [
                "a9c6afa3.e41be"
            ]
        ]
    },
    {
        "id": "e1458e1c.fc9f1",
        "type": "inject",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 1080,
        "wires": [
            [
                "67ba05e4.25342c"
            ]
        ]
    },
    {
        "id": "57fc0e72.525e6",
        "type": "subflow:43717449.df2fbc",
        "z": "cd3e33e6.2da5b",
        "x": 1130,
        "y": 80,
        "wires": [
            [
                "95340430.79a298"
            ]
        ]
    },
    {
        "id": "3ddd238c.2c6a3c",
        "type": "debug",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 370,
        "y": 1080,
        "wires": []
    },
    {
        "id": "5299175.13dd3e8",
        "type": "change",
        "z": "e037ddc.bbf4a2",
        "name": "Empty",
        "rules": [
            {
                "t": "set",
                "p": "search_code",
                "pt": "msg",
                "to": "payload.code",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 1180,
        "wires": [
            [
                "6a7c458a.2837dc"
            ]
        ]
    },
    {
        "id": "6a7c458a.2837dc",
        "type": "mongodb3 in",
        "z": "e037ddc.bbf4a2",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "Get users",
        "collection": "LockUsers",
        "operation": "find.forEach",
        "x": 380,
        "y": 1180,
        "wires": [
            [
                "55e6df5d.5426c",
                "76089500.3ffa3c"
            ]
        ]
    },
    {
        "id": "55e6df5d.5426c",
        "type": "switch",
        "z": "e037ddc.bbf4a2",
        "name": "Use encryption?",
        "property": "use_encryption",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 540,
        "y": 1180,
        "wires": [
            [
                "ff4e8372.ea48c"
            ],
            [
                "f3e276d3.093798"
            ]
        ]
    },
    {
        "id": "5a5bab3d.8b9384",
        "type": "inject",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 1180,
        "wires": [
            [
                "5299175.13dd3e8"
            ]
        ]
    },
    {
        "id": "c0c71d9f.34154",
        "type": "subflow:43717449.df2fbc",
        "z": "e037ddc.bbf4a2",
        "x": 890,
        "y": 1160,
        "wires": [
            [
                "fa31e792.2ef8f8"
            ]
        ]
    },
    {
        "id": "f3e276d3.093798",
        "type": "debug",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 870,
        "y": 1200,
        "wires": []
    },
    {
        "id": "fa31e792.2ef8f8",
        "type": "debug",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1050,
        "y": 1160,
        "wires": []
    },
    {
        "id": "76089500.3ffa3c",
        "type": "debug",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 510,
        "y": 1220,
        "wires": []
    },
    {
        "id": "ff4e8372.ea48c",
        "type": "change",
        "z": "e037ddc.bbf4a2",
        "name": "Set payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.user",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 1160,
        "wires": [
            [
                "c0c71d9f.34154"
            ]
        ]
    },
    {
        "id": "953f3e07.216bb",
        "type": "change",
        "z": "cd3e33e6.2da5b",
        "name": "Set payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.user",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "users",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 80,
        "wires": [
            [
                "57fc0e72.525e6"
            ]
        ]
    },
    {
        "id": "8fcc4c30.88ec2",
        "type": "split",
        "z": "cd3e33e6.2da5b",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 810,
        "y": 80,
        "wires": [
            [
                "953f3e07.216bb"
            ]
        ]
    },
    {
        "id": "95340430.79a298",
        "type": "join",
        "z": "cd3e33e6.2da5b",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1290,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "67ba05e4.25342c",
        "type": "subflow:cd3e33e6.2da5b",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "env": [],
        "x": 240,
        "y": 1080,
        "wires": [
            [
                "3ddd238c.2c6a3c"
            ]
        ]
    },
    {
        "id": "a9c6afa3.e41be",
        "type": "link out",
        "z": "cd3e33e6.2da5b",
        "name": "Call return user records",
        "links": [
            "f6e8edc7.e28f"
        ],
        "x": 775,
        "y": 120,
        "wires": []
    },
    {
        "id": "f6e8edc7.e28f",
        "type": "link in",
        "z": "cd3e33e6.2da5b",
        "name": "Return user records",
        "links": [
            "a9c6afa3.e41be",
            "66c3cd7d.df3254"
        ],
        "x": 1335,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "53d4f830.16d4b8",
        "type": "subflow:cd3e33e6.2da5b",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "x": 440,
        "y": 1800,
        "wires": [
            [
                "962791eb.37895",
                "96834603.605d08"
            ]
        ]
    },
    {
        "id": "962791eb.37895",
        "type": "debug",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 570,
        "y": 1760,
        "wires": []
    },
    {
        "id": "96834603.605d08",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Fill names",
        "func": "msg.options = msg.payload.map(value => value['name']);\nmsg.payload = \"\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 1800,
        "wires": [
            [
                "9ed8267.040fed8"
            ]
        ]
    },
    {
        "id": "49a9c0a4.0b32a",
        "type": "subflow:cd3e33e6.2da5b",
        "z": "3f31c381.f34b6c",
        "name": "",
        "env": [],
        "x": 160,
        "y": 80,
        "wires": [
            [
                "3003d25.68d252e"
            ]
        ]
    },
    {
        "id": "3003d25.68d252e",
        "type": "function",
        "z": "3f31c381.f34b6c",
        "name": "Find code",
        "func": "let exists = msg.payload.some(u => u.code === msg.code);\nif (exists)\n    return msg.payload.find(u => u.code === msg.code);\nelse\n    return [null, { code: msg.code }];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 300,
        "y": 80,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b0b5a0fc.4f27b",
        "type": "subflow:3f31c381.f34b6c",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "x": 890,
        "y": 300,
        "wires": [
            [
                "5bc5f60d.e22bb8"
            ],
            [
                "cdf7aa3a.8122e8"
            ]
        ]
    },
    {
        "id": "3cbdb854.7be778",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Call set code",
        "links": [
            "68a688ea.e8c558"
        ],
        "x": 1475,
        "y": 280,
        "wires": []
    },
    {
        "id": "68a688ea.e8c558",
        "type": "link in",
        "z": "4c9161c6.7a8fe",
        "name": "Set code",
        "links": [
            "3cbdb854.7be778"
        ],
        "x": 155,
        "y": 260,
        "wires": [
            [
                "fc2e712c.245da"
            ]
        ]
    },
    {
        "id": "6e188720.3221e8",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "Empty",
        "rules": [
            {
                "t": "set",
                "p": "code",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 280,
        "wires": [
            [
                "3cbdb854.7be778"
            ]
        ]
    },
    {
        "id": "3b122e6b.a70352",
        "type": "subflow:cd3e33e6.2da5b",
        "z": "b8e924ca.5a2238",
        "name": "",
        "env": [],
        "x": 300,
        "y": 100,
        "wires": [
            [
                "3d6a34bf.abdfdc"
            ]
        ]
    },
    {
        "id": "3d6a34bf.abdfdc",
        "type": "function",
        "z": "b8e924ca.5a2238",
        "name": "Find name",
        "func": "let exists = msg.payload.some(u => u.name === msg.name);\nlet payload = '';\nif (exists) {\n    msg.payload = msg.payload.find(u => u.name === msg.name);\n    return msg;\n}\n\nmsg.payload = {};\nreturn [null, msg];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 450,
        "y": 100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "3abab958.832826",
        "type": "change",
        "z": "b8e924ca.5a2238",
        "name": "Set name",
        "rules": [
            {
                "t": "set",
                "p": "name",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 100,
        "wires": [
            [
                "3b122e6b.a70352"
            ]
        ]
    },
    {
        "id": "8403305d.9107b",
        "type": "switch",
        "z": "4c9161c6.7a8fe",
        "name": "name entered?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 700,
        "y": 120,
        "wires": [
            [
                "334b677d.0162f8"
            ]
        ]
    },
    {
        "id": "3d196ecd.966092",
        "type": "subflow:b8e924ca.5a2238",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "x": 1090,
        "y": 160,
        "wires": [
            [
                "3cfee453.2c2f0c"
            ],
            [
                "be82620.8918da"
            ]
        ]
    },
    {
        "id": "3cfee453.2c2f0c",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Error",
        "func": "return { payload: \"Name exists. Please select exiting user or enter a new name.\" };\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 140,
        "wires": [
            [
                "bf02fed5.9155"
            ]
        ]
    },
    {
        "id": "be82620.8918da",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Blank",
        "func": "global.set('user_type', 'Created');\n\nvar name = msg.name;\nflow.set(\"name\", name);\nmsg = {};\nmsg.name = name;\nmsg.code = \"\";\nmsg.set_start = false;\nmsg.start_date = new Date();\nmsg.set_end = false;\nmsg.end_date = new Date(new Date().setFullYear(new Date().getFullYear() + 1));\nmsg.code_enabled = false;\nmsg.onetime = false;\nmsg.allow_when_home = false;\nmsg.schedule = false;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 180,
        "wires": [
            [
                "c3f71bb5.2f46f8"
            ]
        ]
    },
    {
        "id": "c3f71bb5.2f46f8",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Populate Fields (out)",
        "links": [
            "9435546b.516d28"
        ],
        "x": 1355,
        "y": 180,
        "wires": []
    },
    {
        "id": "e2e148c2.265e98",
        "type": "subflow:b8e924ca.5a2238",
        "z": "a99fcbd1.cd0898",
        "name": "",
        "env": [],
        "x": 150,
        "y": 40,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a6d54302.9c975",
        "type": "subflow:a99fcbd1.cd0898",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "x": 1100,
        "y": 100,
        "wires": [
            [
                "ac2159.44302ea8"
            ]
        ]
    },
    {
        "id": "b37b6388.c0e34",
        "type": "switch",
        "z": "4c9161c6.7a8fe",
        "name": "Update?",
        "property": "user_type",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Updated",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 520,
        "y": 320,
        "wires": [
            [
                "e23e41b3.c59ec"
            ],
            [
                "647dcf0c.da984"
            ]
        ]
    },
    {
        "id": "e23e41b3.c59ec",
        "type": "change",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "code",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "acae3c7.711edc",
        "type": "function",
        "z": "e037ddc.bbf4a2",
        "name": "Query",
        "func": "msg.payload = [\n    { \"name\": msg.payload.name },\n    { $set: msg.payload },\n    { upsert: true, returnOriginal: false }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 1780,
        "wires": [
            [
                "442622eb.8cfd5c"
            ]
        ]
    },
    {
        "id": "442622eb.8cfd5c",
        "type": "mongodb3 in",
        "z": "e037ddc.bbf4a2",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "Upsert User",
        "collection": "LockManager",
        "operation": "findOneAndUpdate",
        "x": 610,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "ae3ad5c1.fe2c38",
        "type": "subflow:cd3e33e6.2da5b",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "env": [],
        "x": 480,
        "y": 2040,
        "wires": [
            [
                "e65b24ce.9f02f8"
            ]
        ]
    },
    {
        "id": "a995ea89.274bf8",
        "type": "function",
        "z": "e037ddc.bbf4a2",
        "name": "Query",
        "func": "msg.payload = [\n    { \"name\": msg.payload.name },\n    { $set: msg.payload },\n    { upsert: true, returnOriginal: false }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 1720,
        "wires": [
            [
                "f03e2634.e8c3a8"
            ]
        ]
    },
    {
        "id": "f03e2634.e8c3a8",
        "type": "mongodb3 in",
        "z": "e037ddc.bbf4a2",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "Upsert User",
        "collection": "LockManager",
        "operation": "findOneAndUpdate",
        "x": 590,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "e0f4e63f.acec48",
        "type": "inject",
        "z": "e037ddc.bbf4a2",
        "name": "JSON",
        "topic": "",
        "payload": "{\"name\":\"Teddy\",\"code\":\"1234\",\"code_enabled\":false,\"onetime\":true,\"allow_when_home\":true,\"set_start\":false,\"set_end\":false,\"schedule\":false,\"restrict_hours\":false,\"start_time\":0,\"end_time\":0}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "a7bd2b67.78f058",
        "type": "comment",
        "z": "b8e924ca.5a2238",
        "name": "*** Notes ***",
        "info": "Accepts a name as the msg.payload.\n\nIf found, returns the object.",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "23d0292e.7e7756",
        "type": "subflow:b8e924ca.5a2238",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "x": 480,
        "y": 1980,
        "wires": [
            [
                "da3749ec.3bb548"
            ],
            []
        ]
    },
    {
        "id": "cc9aff9f.e4692",
        "type": "inject",
        "z": "e037ddc.bbf4a2",
        "name": "JSON",
        "topic": "",
        "payload": "Ted",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 330,
        "y": 1980,
        "wires": [
            [
                "23d0292e.7e7756",
                "ae3ad5c1.fe2c38"
            ]
        ]
    },
    {
        "id": "da3749ec.3bb548",
        "type": "debug",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 650,
        "y": 1980,
        "wires": []
    },
    {
        "id": "e65b24ce.9f02f8",
        "type": "debug",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 650,
        "y": 2040,
        "wires": []
    },
    {
        "id": "4854e7b9.2a28d8",
        "type": "change",
        "z": "e037ddc.bbf4a2",
        "name": "Prep query",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 2120,
        "wires": [
            [
                "5139c093.c1f71"
            ]
        ]
    },
    {
        "id": "5139c093.c1f71",
        "type": "mongodb3 in",
        "z": "e037ddc.bbf4a2",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "Get users",
        "collection": "LockUsers",
        "operation": "find.toArray",
        "x": 340,
        "y": 2120,
        "wires": [
            [
                "a5785778.858188"
            ]
        ]
    },
    {
        "id": "a5785778.858188",
        "type": "subflow:56145c0c.026bc4",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "env": [],
        "x": 500,
        "y": 2120,
        "wires": [
            [
                "6fb67b38.7f7724",
                "402b8b3e.f72234"
            ]
        ]
    },
    {
        "id": "6fb67b38.7f7724",
        "type": "switch",
        "z": "e037ddc.bbf4a2",
        "name": "Use encryption?",
        "property": "use_encryption",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 2120,
        "wires": [
            [
                "d17c9250.8c8e6"
            ],
            [
                "66c3cd7d.df3254"
            ]
        ]
    },
    {
        "id": "93dba0b2.97f76",
        "type": "subflow:43717449.df2fbc",
        "z": "e037ddc.bbf4a2",
        "x": 1150,
        "y": 2120,
        "wires": [
            [
                "555e11dd.ffccc",
                "dd462e06.af205"
            ]
        ]
    },
    {
        "id": "6a884b2e.615524",
        "type": "change",
        "z": "e037ddc.bbf4a2",
        "name": "Set payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.user",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 2120,
        "wires": [
            [
                "93dba0b2.97f76"
            ]
        ]
    },
    {
        "id": "d17c9250.8c8e6",
        "type": "split",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 830,
        "y": 2120,
        "wires": [
            [
                "6a884b2e.615524"
            ]
        ]
    },
    {
        "id": "555e11dd.ffccc",
        "type": "join",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1310,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "66c3cd7d.df3254",
        "type": "link out",
        "z": "e037ddc.bbf4a2",
        "name": "Call return user records",
        "links": [
            "f6e8edc7.e28f",
            "745fd3e3.ab8f94"
        ],
        "x": 795,
        "y": 2160,
        "wires": []
    },
    {
        "id": "909f447c.7d8a78",
        "type": "inject",
        "z": "e037ddc.bbf4a2",
        "name": "JSON",
        "topic": "",
        "payload": "Ted",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 2060,
        "wires": [
            [
                "4854e7b9.2a28d8"
            ]
        ]
    },
    {
        "id": "402b8b3e.f72234",
        "type": "debug",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 650,
        "y": 2160,
        "wires": []
    },
    {
        "id": "dd462e06.af205",
        "type": "debug",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1310,
        "y": 2160,
        "wires": []
    },
    {
        "id": "31a248ea.a1aec8",
        "type": "subflow:43717449.df2fbc",
        "z": "e037ddc.bbf4a2",
        "x": 430,
        "y": 2280,
        "wires": [
            [
                "a941aade.7720f8"
            ]
        ]
    },
    {
        "id": "22120c1f.f60064",
        "type": "inject",
        "z": "e037ddc.bbf4a2",
        "name": "JSON",
        "topic": "",
        "payload": "U2FsdGVkX19w9nvWw3K4vreyJcQv8EurHr+quJKEykw=",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 230,
        "y": 2280,
        "wires": [
            [
                "31a248ea.a1aec8"
            ]
        ]
    },
    {
        "id": "a941aade.7720f8",
        "type": "debug",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 630,
        "y": 2280,
        "wires": []
    },
    {
        "id": "cfcea17d.abb36",
        "type": "subflow:43717449.df2fbc",
        "z": "e037ddc.bbf4a2",
        "x": 430,
        "y": 2320,
        "wires": [
            [
                "db4ed341.4831b"
            ]
        ]
    },
    {
        "id": "b4118fbd.8dcea",
        "type": "inject",
        "z": "e037ddc.bbf4a2",
        "name": "JSON",
        "topic": "",
        "payload": "U2FsdGVkX1+d+Af6m1Ot/23oLKxWCLlJ9kIlj0I3jobX/45MrbyBi62mySwdVSDqFtGD/u5CDlAlc8EfXvTDIPX2vdNqdPD0GkeAJrRx6FjIvCDttHGDt2lzgVr5CARcAfYRsjeVlJA+uoMPcF3N64ONRouawZo8YDbZBWPKuTn+WGjPEV8DCmyPyfT/F114zV4gfKq3TMbi1KLPHnj6wLxz+QcZUwr4Zq25m3MvS7TgVIVbcYvLTBRreNCwjp0aX+e0Jxtkd8dUYLhZC86FczSZwUvkgIo8YSiVMU+0IdJxvw36WHvoEZLJKlNKf+FLrWuki7h/2IUggNlx/WSGbV0UujQ/OkLOtXPv3FOSqnP2g8nF8/k9813eH4xAKjqWGat/L3IqCqT/pzDyEXN9vw==",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 230,
        "y": 2320,
        "wires": [
            [
                "cfcea17d.abb36"
            ]
        ]
    },
    {
        "id": "db4ed341.4831b",
        "type": "debug",
        "z": "e037ddc.bbf4a2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 630,
        "y": 2320,
        "wires": []
    },
    {
        "id": "436d9f47.8be168",
        "type": "function",
        "z": "4c9161c6.7a8fe",
        "name": "Valid passcode?",
        "func": "if (!global.get(\"use_passcode\") || global.get(\"passcode\") !== undefined)\n    return msg;\nelse return [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 520,
        "y": 140,
        "wires": [
            [
                "8403305d.9107b"
            ],
            [
                "a597f1ef.0669"
            ]
        ]
    },
    {
        "id": "e75b450c.28f21",
        "type": "subflow:cd3e33e6.2da5b",
        "z": "593fb5af.ec311c",
        "name": "",
        "x": 240,
        "y": 860,
        "wires": [
            [
                "94c6629.c11062"
            ]
        ]
    },
    {
        "id": "94c6629.c11062",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 370,
        "y": 860,
        "wires": []
    },
    {
        "id": "9c060be8.a482b8",
        "type": "subflow:f5c4273d.2d80f",
        "z": "e037ddc.bbf4a2",
        "x": 780,
        "y": 1560,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c5997d4e.42c4e8",
        "type": "subflow:f5c4273d.2d80f",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "env": [],
        "x": 630,
        "y": 1440,
        "wires": [
            [
                "bc2d0432.a76638",
                "e8cc9596.4ed698"
            ],
            [
                "4ffd98dd.f95938"
            ]
        ]
    },
    {
        "id": "69acff54.9d91d8",
        "type": "debug",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1210,
        "y": 320,
        "wires": []
    },
    {
        "id": "2f82b553.01672a",
        "type": "subflow:a99fcbd1.cd0898",
        "z": "1f5f3da9.ce3eca",
        "name": "",
        "x": 160,
        "y": 40,
        "wires": [
            [
                "1d77d448.597e04"
            ]
        ]
    },
    {
        "id": "3e0183e9.5d136c",
        "type": "mongodb3 in",
        "z": "1f5f3da9.ce3eca",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "Delete User",
        "collection": "LockUsers",
        "operation": "deleteOne",
        "x": 470,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "1d77d448.597e04",
        "type": "function",
        "z": "1f5f3da9.ce3eca",
        "name": "Build query",
        "func": "return { payload: [\n    {\n        \"user\": msg.payload.hashed\n    },\n    {}\n]};",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 40,
        "wires": [
            [
                "3e0183e9.5d136c"
            ]
        ]
    },
    {
        "id": "d0dd8efc.f3b568",
        "type": "subflow:1f5f3da9.ce3eca",
        "z": "4c9161c6.7a8fe",
        "name": "",
        "x": 610,
        "y": 1640,
        "wires": [
            [
                "82fcda78.a7d788"
            ]
        ]
    },
    {
        "id": "87133914.5ced2",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "### BUTTONS ###",
        "info": "All reset flows come through here",
        "x": 110,
        "y": 1380,
        "wires": []
    },
    {
        "id": "62bc5572.7dd5b4",
        "type": "comment",
        "z": "4c9161c6.7a8fe",
        "name": "### DEBUGGING ###",
        "info": "",
        "x": 120,
        "y": 1960,
        "wires": []
    },
    {
        "id": "19d2503e.a0441",
        "type": "subflow:b8e924ca.5a2238",
        "z": "f5c4273d.2d80f",
        "name": "",
        "env": [],
        "x": 300,
        "y": 140,
        "wires": [
            [
                "81cfc408.00b95",
                "a630fae5.638f98"
            ],
            [
                "2cfcf521.8e5a52",
                "c31f6187.7d81f"
            ]
        ]
    },
    {
        "id": "2801a0a5.a97bf8",
        "type": "change",
        "z": "f5c4273d.2d80f",
        "name": "Query",
        "rules": [
            {
                "t": "set",
                "p": "backup",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user.name",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 140,
        "wires": [
            [
                "19d2503e.a0441"
            ]
        ]
    },
    {
        "id": "2cfcf521.8e5a52",
        "type": "change",
        "z": "f5c4273d.2d80f",
        "name": "Move user",
        "rules": [
            {
                "t": "move",
                "p": "user",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 220,
        "wires": [
            [
                "5598b40b.2ed244"
            ]
        ]
    },
    {
        "id": "c5fe9b86.e43d1",
        "type": "change",
        "z": "f5c4273d.2d80f",
        "name": "Move hash & user",
        "rules": [
            {
                "t": "move",
                "p": "payload.hashed",
                "pt": "msg",
                "to": "key",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "user",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 40,
        "wires": [
            [
                "cb99813f.b401d8"
            ]
        ]
    },
    {
        "id": "81cfc408.00b95",
        "type": "switch",
        "z": "f5c4273d.2d80f",
        "name": "Use encryption?",
        "property": "use_encryption",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 60,
        "wires": [
            [
                "c5fe9b86.e43d1"
            ],
            [
                "ff376649.abf11"
            ]
        ]
    },
    {
        "id": "ff376649.abf11",
        "type": "change",
        "z": "f5c4273d.2d80f",
        "name": "Move name & user",
        "rules": [
            {
                "t": "move",
                "p": "payload.name",
                "pt": "msg",
                "to": "key",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "user",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "e57e5a0d.6e49e8"
            ]
        ]
    },
    {
        "id": "5598b40b.2ed244",
        "type": "switch",
        "z": "f5c4273d.2d80f",
        "name": "Use encryption?",
        "property": "use_encryption",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 700,
        "y": 220,
        "wires": [
            [
                "8a90c8f5.ed5148"
            ],
            [
                "a3ff1a3f.086648"
            ]
        ]
    },
    {
        "id": "8a90c8f5.ed5148",
        "type": "subflow:bae968bd.7a3cb8",
        "z": "f5c4273d.2d80f",
        "x": 910,
        "y": 200,
        "wires": [
            [
                "664273a6.e8203c"
            ]
        ]
    },
    {
        "id": "664273a6.e8203c",
        "type": "function",
        "z": "f5c4273d.2d80f",
        "name": "Query",
        "func": "let q = { \n    payload: \n    [{ user: msg.payload }, { forceServerObjectId: true }],\n    backup: msg.backup\n};\n\nreturn q;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 200,
        "wires": [
            [
                "92fc2b26.a838c8"
            ]
        ]
    },
    {
        "id": "92fc2b26.a838c8",
        "type": "mongodb3 in",
        "z": "f5c4273d.2d80f",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "insert",
        "collection": "LockUsers",
        "operation": "insertOne",
        "x": 1190,
        "y": 200,
        "wires": [
            [
                "1da62d68.ce64c3"
            ]
        ]
    },
    {
        "id": "a3ff1a3f.086648",
        "type": "function",
        "z": "f5c4273d.2d80f",
        "name": "Query",
        "func": "let q = { \n    payload: \n    [{ user: msg.payload }, { forceServerObjectId: true }],\n    backup: msg.backup\n};\n\nreturn q;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 240,
        "wires": [
            [
                "55af3915.0a9978"
            ]
        ]
    },
    {
        "id": "55af3915.0a9978",
        "type": "mongodb3 in",
        "z": "f5c4273d.2d80f",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "insert",
        "collection": "LockUsers",
        "operation": "insertOne",
        "x": 1190,
        "y": 240,
        "wires": [
            [
                "1da62d68.ce64c3"
            ]
        ]
    },
    {
        "id": "38536ac0.2e3ace",
        "type": "function",
        "z": "f5c4273d.2d80f",
        "name": "Query",
        "func": "msg.payload = [\n    { \"user\": msg.key },\n    { $set: {\"user\": msg.payload} }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 40,
        "wires": [
            [
                "a59451f4.a868a"
            ]
        ]
    },
    {
        "id": "cb99813f.b401d8",
        "type": "subflow:bae968bd.7a3cb8",
        "z": "f5c4273d.2d80f",
        "name": "",
        "x": 910,
        "y": 40,
        "wires": [
            [
                "38536ac0.2e3ace"
            ]
        ]
    },
    {
        "id": "a59451f4.a868a",
        "type": "mongodb3 in",
        "z": "f5c4273d.2d80f",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "update",
        "collection": "LockUsers",
        "operation": "updateOne",
        "x": 1190,
        "y": 40,
        "wires": [
            [
                "1da62d68.ce64c3"
            ]
        ]
    },
    {
        "id": "e57e5a0d.6e49e8",
        "type": "function",
        "z": "f5c4273d.2d80f",
        "name": "Query",
        "func": "msg.payload = [\n    { \"name\": msg.key },\n    { $set: {\"user\": msg.payload} }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 80,
        "wires": [
            [
                "9a55fcf9.6c2c4"
            ]
        ]
    },
    {
        "id": "9a55fcf9.6c2c4",
        "type": "mongodb3 in",
        "z": "f5c4273d.2d80f",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "update",
        "collection": "LockUsers",
        "operation": "updateOne",
        "x": 1190,
        "y": 80,
        "wires": [
            [
                "1da62d68.ce64c3"
            ]
        ]
    },
    {
        "id": "1f1338cf.d02bb7",
        "type": "subflow:56145c0c.026bc4",
        "z": "956006f5.f494f8",
        "name": "",
        "x": 320,
        "y": 60,
        "wires": [
            [
                "2ecbecfa.4fb454"
            ]
        ]
    },
    {
        "id": "2ecbecfa.4fb454",
        "type": "change",
        "z": "956006f5.f494f8",
        "name": "Set topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "slots",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "55c9c28f.d0e8ac",
        "type": "comment",
        "z": "2994561d.23b94a",
        "name": "In this path, no slot was provided so we lookup by name",
        "info": "",
        "x": 660,
        "y": 60,
        "wires": []
    },
    {
        "id": "7004447c.b1992c",
        "type": "comment",
        "z": "2994561d.23b94a",
        "name": "First, we overwrite the slot with a random code",
        "info": "",
        "x": 220,
        "y": 360,
        "wires": []
    },
    {
        "id": "8437b043.2d3598",
        "type": "comment",
        "z": "2994561d.23b94a",
        "name": "If the clear_code flag is set we call clear_code",
        "info": "",
        "x": 950,
        "y": 380,
        "wires": []
    },
    {
        "id": "e910d2a4.2aa8b8",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 340,
        "wires": [
            [
                "145d12fb.0670d5"
            ]
        ]
    },
    {
        "id": "145d12fb.0670d5",
        "type": "change",
        "z": "593fb5af.ec311c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lock_node_id",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 340,
        "wires": [
            [
                "a082a8db.e2191"
            ]
        ]
    },
    {
        "id": "a082a8db.e2191",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 430,
        "y": 340,
        "wires": []
    },
    {
        "id": "22eec7b8.06862",
        "type": "link in",
        "z": "4d149fd1.afec5",
        "name": "Gen Code",
        "links": [
            "183f9cbb.ded9b3",
            "7e73cecd.c228f8",
            "d469a8d3.c00208",
            "88dd0817.5f248"
        ],
        "x": 75,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "3c6d6837.d2a6a",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1290,
        "y": 240,
        "wires": []
    },
    {
        "id": "c36dc24c.55684",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "",
        "topic": "",
        "payload": "{\"data\":{\"node_id\":26,\"code_slot\":6}}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 690,
        "y": 320,
        "wires": [
            [
                "7afad96b.c4df68"
            ]
        ]
    },
    {
        "id": "7afad96b.c4df68",
        "type": "api-call-service",
        "z": "593fb5af.ec311c",
        "name": "",
        "server": "349447fb.a8b908",
        "version": 1,
        "service_domain": "lock",
        "service": "clear_usercode",
        "entityId": "",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 910,
        "y": 320,
        "wires": [
            [
                "fb904bff.8adf08"
            ]
        ]
    },
    {
        "id": "fb904bff.8adf08",
        "type": "api-call-service",
        "z": "593fb5af.ec311c",
        "name": "",
        "server": "349447fb.a8b908",
        "version": 1,
        "service_domain": "lock",
        "service": "get_usercode",
        "entityId": "",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 950,
        "y": 360,
        "wires": [
            [
                "65bf193b.8e2ae8"
            ]
        ]
    },
    {
        "id": "65bf193b.8e2ae8",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1130,
        "y": 360,
        "wires": []
    },
    {
        "id": "b9dd7adb.3ef22",
        "type": "subflow:956006f5.f494f8",
        "z": "85b5cbfc.b785c8",
        "name": "",
        "x": 360,
        "y": 80,
        "wires": [
            [
                "e2b11f71.91bbe"
            ]
        ]
    },
    {
        "id": "cf9bfa5.90b7208",
        "type": "function",
        "z": "57f31d03.1c5fc4",
        "name": "Slot found",
        "func": "const _ = context.global.lodash;\n\nif (!_.isEmpty(msg.payload)) {\n    node.log(\"SLOT FOUND\");\n    node.status({ fill: \"blue\", shape: \"dot\", text: `existing slot ${msg.payload}` });\n    return { slot: msg.payload.slot, payload: msg.backup };\n} else {\n    node.log(\"SLOT NOT FOUND - CALLING GET NEXT SLOT\");\n    node.status({ fill: \"green\", shape: \"dot\", text: \"get next slot\" });\n    var m = {};\n    m.payload = msg;\n    return [null, m ];\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 710,
        "y": 440,
        "wires": [
            [],
            [
                "4f6f63d8.385dac"
            ]
        ]
    },
    {
        "id": "7ad14277.81de04",
        "type": "function",
        "z": "57f31d03.1c5fc4",
        "name": "Backup and create new payload",
        "func": "msg.backup = msg.payload;\nmsg.payload = { name: msg.name };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 440,
        "wires": [
            [
                "ee57fc0b.96c1f"
            ]
        ]
    },
    {
        "id": "ee57fc0b.96c1f",
        "type": "mongodb3 in",
        "z": "57f31d03.1c5fc4",
        "service": "_ext_",
        "configNode": "7555299e.f56478",
        "name": "Get Slot by Name",
        "collection": "LockSlots",
        "operation": "findOne",
        "x": 530,
        "y": 440,
        "wires": [
            [
                "cf9bfa5.90b7208"
            ]
        ]
    },
    {
        "id": "4f6f63d8.385dac",
        "type": "subflow:85b5cbfc.b785c8",
        "z": "57f31d03.1c5fc4",
        "name": "",
        "x": 870,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "db70d230.3102e8",
        "type": "function",
        "z": "85b5cbfc.b785c8",
        "name": "Output",
        "func": "node.log(`---------------------------------------\\n\\n\\nSLOTS\\n\\n${JSON.stringify(msg, null, 2)}\\n\\n\\n=======================================`);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "5c9ef5c9.ff9b44",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "",
        "topic": "",
        "payload": "{\"data\":{\"node_id\":26,\"code_slot\":8}}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 710,
        "y": 380,
        "wires": [
            [
                "fb904bff.8adf08"
            ]
        ]
    },
    {
        "id": "7b4edb75.c351ec",
        "type": "api-call-service",
        "z": "593fb5af.ec311c",
        "name": "",
        "server": "349447fb.a8b908",
        "version": 1,
        "service_domain": "lock",
        "service": "set_usercode",
        "entityId": "",
        "data": "{\"node_id\":26,\"usercode\":\"0577\",\"code_slot\":4}",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "payload",
        "output_location_type": "msg",
        "mustacheAltTags": false,
        "x": 1000,
        "y": 560,
        "wires": [
            [
                "987510a3.8de7d8"
            ]
        ]
    },
    {
        "id": "7cea07b4.74468",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 820,
        "y": 560,
        "wires": [
            [
                "7b4edb75.c351ec"
            ]
        ]
    },
    {
        "id": "987510a3.8de7d8",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1170,
        "y": 560,
        "wires": []
    },
    {
        "id": "58162262.f91854",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "Poll",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 90,
        "y": 1860,
        "wires": [
            [
                "549a018.9889b8"
            ]
        ]
    },
    {
        "id": "549a018.9889b8",
        "type": "api-current-state",
        "z": "593fb5af.ec311c",
        "name": "Lock Batteries",
        "server": "349447fb.a8b908",
        "version": 1,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "override_topic": false,
        "entity_id": "zwave.lock_front_door_deadbolt",
        "state_type": "str",
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "blockInputOverrides": false,
        "x": 240,
        "y": 1860,
        "wires": [
            [
                "2ef9d2cb.22cf0e"
            ]
        ]
    },
    {
        "id": "7faef088.b51f",
        "type": "debug",
        "z": "593fb5af.ec311c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 510,
        "y": 1860,
        "wires": []
    },
    {
        "id": "a5cd2981.0a3d8",
        "type": "comment",
        "z": "593fb5af.ec311c",
        "name": "### LOCK BATTERY PERCENTAGE ###",
        "info": "",
        "x": 180,
        "y": 1820,
        "wires": []
    },
    {
        "id": "58d9c1b9.b76288",
        "type": "function",
        "z": "57f31d03.1c5fc4",
        "name": "Slot found",
        "func": "const _ = context.global.lodash;\n\nif (!_.isEmpty(msg.payload))\n    msg.slot = msg.payload.slot;\nelse\n    msg.slot = msg.freeSlots[msg.parts.index];\n\nnode.log(`\\n ******* CREATE SLOT FOUND *******\\n\\slot\\n${msg.slot}\\n\\nmsg\\n${JSON.stringify(msg, null, 2)}\\n\\n******* END SLOT FOUND *******\\n\\n`);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 120,
        "wires": [
            [
                "216b2122.91ddf6"
            ]
        ]
    },
    {
        "id": "230adcec.5afbf4",
        "type": "mongodb3 in",
        "z": "57f31d03.1c5fc4",
        "service": "_ext_",
        "configNode": "7555299e.f56478",
        "name": "Get Slot by Name",
        "collection": "LockSlots",
        "operation": "findOne",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "58d9c1b9.b76288"
            ]
        ]
    },
    {
        "id": "d06d05e6.d2c008",
        "type": "change",
        "z": "57f31d03.1c5fc4",
        "name": "Build query",
        "rules": [
            {
                "t": "set",
                "p": "name",
                "pt": "msg",
                "to": "payload.name",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "backup",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "name",
                "pt": "msg",
                "to": "payload.name",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 120,
        "wires": [
            [
                "230adcec.5afbf4"
            ]
        ]
    },
    {
        "id": "216b2122.91ddf6",
        "type": "change",
        "z": "57f31d03.1c5fc4",
        "name": "Build payload",
        "rules": [
            {
                "t": "move",
                "p": "backup",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.slot",
                "pt": "msg",
                "to": "slot",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "55616bb.a13e014",
        "type": "inject",
        "z": "593fb5af.ec311c",
        "name": "",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 110,
        "y": 1060,
        "wires": [
            [
                "54bf45f6.a42134"
            ]
        ]
    },
    {
        "id": "54bf45f6.a42134",
        "type": "mongodb3 in",
        "z": "593fb5af.ec311c",
        "service": "_ext_",
        "configNode": "7fbc5f5e.d45f6",
        "name": "Clear Slots",
        "collection": "LockSlots",
        "operation": "deleteMany",
        "x": 390,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "c7261977.3b021",
        "type": "split",
        "z": "e7bd86c3.896d68",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "654efc98.951194"
            ]
        ]
    },
    {
        "id": "1c822a73.c55026",
        "type": "subflow:57f31d03.1c5fc4",
        "z": "e7bd86c3.896d68",
        "name": "",
        "x": 300,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ba055706.89354",
        "type": "mongodb3 in",
        "z": "e7bd86c3.896d68",
        "service": "_ext_",
        "configNode": "9b97ee84.83a28",
        "name": "Upsert Slot",
        "collection": "LockSlots",
        "operation": "updateOne",
        "x": 490,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "654efc98.951194",
        "type": "function",
        "z": "e7bd86c3.896d68",
        "name": "Create lock objects",
        "func": "const node_id = global.get(\"lock_node_id\");\n\nnode.log(`\\n ******* CREATE LOCK OBJECTS *******\\n\\nPayload\\n${msg.payload}\\n\\nmsg\\n${JSON.stringify(msg, null, 2)}\\n\\n******* END CREATE LOCK OBJECTS *******\\n\\n`);\n\nlet lock = {\n    payload: {\n        data: {\n            node_id: node_id,\n            code_slot: msg.payload.slot,\n            usercode: msg.payload.code\n        }\n    }\n};\n\n\nlet slot = { payload: [\n    { \"name\": msg.payload.name },\n    { $set: { slot: msg.payload.slot, name: msg.payload.name } },\n    { upsert: true, returnOriginal: false, forceServerObjectId: true}\n]};\n\nlet notification = { name: msg.payload.name, action: 'Added' };\n\nnode.status({ fill: \"blue\", shape: \"dot\", text: `${msg.payload.name} [${msg.payload.code}] slot ${msg.payload.slot}` });\nnode.log(`Writing LockSlot => user ${msg.payload.name} with code ${msg.payload.code} on slot ${msg.payload.slot}`);\nnode.log(`Writing db LockSlots => name ${msg.payload.name} slot ${msg.payload.slot}`);\n\nreturn [lock, slot, notification];\n",
        "outputs": 3,
        "noerr": 0,
        "x": 290,
        "y": 120,
        "wires": [
            [
                "fd4b7f2c.a2f68"
            ],
            [
                "ba055706.89354"
            ],
            []
        ]
    },
    {
        "id": "fd4b7f2c.a2f68",
        "type": "api-call-service",
        "z": "e7bd86c3.896d68",
        "name": "Program Lock",
        "server": "349447fb.a8b908",
        "version": 1,
        "service_domain": "lock",
        "service": "set_usercode",
        "entityId": "",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 500,
        "y": 80,
        "wires": [
            [
                "a39afffa.9eaf5"
            ]
        ]
    },
    {
        "id": "a39afffa.9eaf5",
        "type": "function",
        "z": "e7bd86c3.896d68",
        "name": "Log to console",
        "func": "node.log(`Program slot with ${JSON.stringify(msg.payload, null, 2)}`);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "7a521941.8b3128",
        "type": "split",
        "z": "4d149fd1.afec5",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 650,
        "y": 540,
        "wires": [
            [
                "9929a8eb.21b828",
                "2904c9dc.ff532e"
            ]
        ]
    },
    {
        "id": "2904c9dc.ff532e",
        "type": "change",
        "z": "4d149fd1.afec5",
        "name": "Disable",
        "rules": [
            {
                "t": "set",
                "p": "payload.code_enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 540,
        "wires": [
            [
                "b05143b9.b3fe9",
                "4f9dba8e.70196c"
            ]
        ]
    },
    {
        "id": "4f9dba8e.70196c",
        "type": "debug",
        "z": "4d149fd1.afec5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 950,
        "y": 580,
        "wires": []
    },
    {
        "id": "b05143b9.b3fe9",
        "type": "subflow:f5c4273d.2d80f",
        "z": "4d149fd1.afec5",
        "name": "",
        "env": [],
        "x": 970,
        "y": 540,
        "wires": [
            [
                "2cf0154c.a83d8a",
                "6daeb99c.6b79d8"
            ],
            []
        ]
    },
    {
        "id": "8e41d961.396ce8",
        "type": "subflow:2994561d.23b94a",
        "z": "4d149fd1.afec5",
        "name": "",
        "x": 1270,
        "y": 540,
        "wires": [
            [
                "4e249cb9.87eddc"
            ]
        ]
    },
    {
        "id": "2cf0154c.a83d8a",
        "type": "debug",
        "z": "4d149fd1.afec5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1130,
        "y": 580,
        "wires": []
    },
    {
        "id": "4e249cb9.87eddc",
        "type": "debug",
        "z": "4d149fd1.afec5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1410,
        "y": 580,
        "wires": []
    },
    {
        "id": "775830f9.99ffe8",
        "type": "inject",
        "z": "4d149fd1.afec5",
        "name": "",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 90,
        "y": 320,
        "wires": [
            [
                "a1b16ca.7b9b91",
                "48e4149d.47c364"
            ]
        ]
    },
    {
        "id": "5dc8ff9.a0e288",
        "type": "function",
        "z": "4d149fd1.afec5",
        "name": "Get free slots",
        "func": "const _ = context.global.lodash;\n\ncontext.data = context.data || {};\n\nswitch (msg.topic) {\n    case \"users\":\n        context.data.users = msg.payload;\n        msg = null;\n        break;\n    case \"slots\":\n        context.data.slots = msg.payload;\n        msg = null;\n        break;\n    default:\n        msg = null;\n    \tbreak;\n\n}\n\nif(context.data.users !== undefined && context.data.slots !== undefined) {\n    let users = context.data.users;\n    let slots = context.data.slots.map(s => s.slot);\n\n    let freeSlots = getFreeSlots(slots);\n    node.status({ fill: \"blue\", shape: \"dot\", text: `free slots ${freeSlots}` });\n\n\tmsg = { \n\t    users: users,\n\t    slots: context.data.slots,\n\t    freeSlots: freeSlots\n\t};\n    global.set(\"slots\", context.data.slots);\n    context.data = null;\n\treturn msg;\n} else return msg;\n\nfunction getFreeSlots(usedSlots) {\n    let offset = global.get(\"slot_offset\") + 1;\n    let allSlots = Array.from({length: 31 - offset}, (v, k) => k + offset);\n    let users = context.data.users;\n\n    let allFreeSlots = _.difference(allSlots, usedSlots);\n    let freeSlots = allFreeSlots.slice(0, users.length);\n    return freeSlots;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "92e6df69.d78e"
            ]
        ]
    },
    {
        "id": "a1b16ca.7b9b91",
        "type": "subflow:cd3e33e6.2da5b",
        "z": "4d149fd1.afec5",
        "name": "",
        "x": 260,
        "y": 320,
        "wires": [
            [
                "5dc8ff9.a0e288"
            ]
        ]
    },
    {
        "id": "48e4149d.47c364",
        "type": "subflow:956006f5.f494f8",
        "z": "4d149fd1.afec5",
        "name": "",
        "env": [],
        "x": 260,
        "y": 360,
        "wires": [
            [
                "5dc8ff9.a0e288"
            ]
        ]
    },
    {
        "id": "92e6df69.d78e",
        "type": "function",
        "z": "4d149fd1.afec5",
        "name": "Parse codes",
        "func": "//node.log(`freeSlots > ${JSON.stringify(msg.freeSlots, null, 2)}`);\nlet valid = msg.users.filter(u => u.code_enabled && (validPermanent(u) || validSchedule(u)));\nlet invalid = msg.users\n    .filter(u => !valid.includes(u))\n    .concat(valid.filter(u => !msg.users.includes(u)));\n    \nlet need_to_add = valid.filter(u => !hasSlot(u));\nneed_to_add = need_to_add.map((u, index) => {\n  return { slot:  msg.freeSlots[index], name: u.name, code: u.code };\n});\n\nlet add_array = Object.keys(need_to_add).map(key => need_to_add[key]);\nlet need_to_delete = invalid.filter(function(u) {\n  return hasSlot(u);\n}).map(function(u) { \n    let slot = getSlot(u);\n    if (slot !== undefined)\n        return {slot: slot.slot, name: slot.name}\n});\n\n//node.log(`\\n ******* PARSE CODES *******\\n\\nNeed to add\\n${JSON.stringify(need_to_add, null, 2)}\\n\\nadd_Array\\n${JSON.stringify(add_array, null, 2)}\\n\\n******* END PARSE CODES *******`);\n//node.log(`\\n ******* PARSE CODES *******\\n\\nNeed to add\\n${JSON.stringify(need_to_add, null, 2)}\\n\\nneed to delete\\n${JSON.stringify(need_to_delete, null, 2)}\\n\\n******* END PARSE CODES *******`);\n//node.log(`\\n ******* PARSE CODES *******\\n\\nfreeslots\\n${msg.freeslots}\\n\\n******* END PARSE CODES *******`);\n\n//node.log(`delete > ${JSON.stringify(need_to_delete, null, 2)}`);\n\nlet add_count = need_to_add.length || 0;\nlet delete_count = need_to_delete.length || 0;\n\nnode.status({ fill: \"blue\", shape: \"dot\", text: `add: ${add_count} delete: ${delete_count}` });\n//msg.payload = need_to_add;\n//msg.topic = \"Scheduled code add\";\n\nlet add_users = {};\nif (add_count > 0) {\n    need_to_add.topic = \"Scheduled code add\";\n    add_users.payload = need_to_add;\n} else add_users = null;\n\nlet delete_users = {};\nif (delete_count > 0) {\n    need_to_delete.topic = 'Scheduled code delete';\n    delete_users.payload = need_to_delete;\n} else delete_users = null;\n\n//return [msg, need_to_delete];\nreturn [add_users, delete_users];\n\nfunction validPermanent(user) {\n    return (validStart(user) && validEnd(user) && validDay(user) && validTime(user) && validWhileAway(user))\n}\nfunction validStart(user) {\n    return !user.set_start || user.start_date <= now;\n}\n\nfunction validEnd(user) {\n    return !user.set_end || user.end_date >= now;\n}\n\nfunction validDay(user) {\n    if (!user.schedule)\n        return true;\n        \n    let d = new Date();\n    let weekday = new Array(7);\n    weekday[0] =  \"Sunday\";\n    weekday[1] = \"Monday\";\n    weekday[2] = \"Tuesday\";\n    weekday[3] = \"Wednesday\";\n    weekday[4] = \"Thursday\";\n    weekday[5] = \"Friday\";\n    weekday[6] = \"Saturday\";\n    var n = weekday[d.getDay()];\n    try {\n        var a = user.days.includes(n);\n    } catch(ex) { \n        node.log(`ERROR - ${JSON.stringify(user, null, 2)}`); \n    }\n    return !user.schedule || user.days.includes(n);\n}\n\nfunction validTime(user) {\n    let d = new Date(), e = new Date(d);\n    let msSinceMidnight = e - d.setHours(0, 0, 0, 0);\n    return !user.restrict_hours || (msSinceMidnight >= user.start_time && msSinceMidnight <= user.end_time);\n}\n\nfunction validWhileAway(user) {\n    let away = global.get(\"presence\") === \"all_away\";\n    return user.allow_when_home || away;\n}\n\nfunction validSchedule(user) {\n    return (validStart(user) && validEnd(user) && validDay(user) && validTime(user) && validWhileAway(user))\n}\n\nfunction hasSlot(user) {\n//    node.log(`*****************\\n msg.slots \\n${JSON.stringify(msg.slots, null, 2)}\\n*****************************`);\n\n    return msg.slots.find(slot => slot.name  === user.name);\n}\n\nfunction getSlot(user) {\n    return msg.slots.find(slot => slot.name  === user.name);\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 590,
        "y": 340,
        "wires": [
            [
                "8f7b4129.9d05c",
                "436bc17d.99492"
            ],
            [
                "f199fb2d.ba2e38",
                "2cdc855c.46b3ca"
            ]
        ]
    },
    {
        "id": "f199fb2d.ba2e38",
        "type": "subflow:2994561d.23b94a",
        "z": "4d149fd1.afec5",
        "name": "",
        "env": [],
        "x": 770,
        "y": 380,
        "wires": [
            [
                "b81bb0c4.f258d"
            ]
        ]
    },
    {
        "id": "8f7b4129.9d05c",
        "type": "subflow:e7bd86c3.896d68",
        "z": "4d149fd1.afec5",
        "name": "",
        "env": [],
        "x": 770,
        "y": 320,
        "wires": [
            [
                "108bab9.fe05a54"
            ],
            [
                "db465d2e.f9e81"
            ],
            [
                "ec72db19.67b47"
            ]
        ]
    },
    {
        "id": "ec72db19.67b47",
        "type": "link out",
        "z": "4d149fd1.afec5",
        "name": "Call scheduled notification (enable)",
        "links": [
            "89cbdfdc.370cf"
        ],
        "x": 895,
        "y": 360,
        "wires": []
    },
    {
        "id": "2ef9d2cb.22cf0e",
        "type": "function",
        "z": "593fb5af.ec311c",
        "name": "Status",
        "func": "msg.payload = msg.data.attributes.battery_level;\nlet color = '';\nif (msg.payload < 30)\n    color = 'red';\nelse if (msg.payload >= 31 && msg.payload < 50)\n    color = 'yellow';\nelse\n    color = 'green';\n\nnode.status({ fill: color, shape: \"dot\", text: `Lock battery at ${ msg.payload }%`});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 1860,
        "wires": [
            [
                "7faef088.b51f"
            ]
        ]
    },
    {
        "id": "312f8e9b.b8a0d2",
        "type": "comment",
        "z": "59474d53.1b40d4",
        "name": "Locked with code",
        "info": "",
        "x": 640,
        "y": 60,
        "wires": []
    },
    {
        "id": "8cd173a3.76822",
        "type": "comment",
        "z": "59474d53.1b40d4",
        "name": "unlocked with code",
        "info": "",
        "x": 650,
        "y": 100,
        "wires": []
    },
    {
        "id": "c31f6187.7d81f",
        "type": "change",
        "z": "f5c4273d.2d80f",
        "name": "Set topic (User created)",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "User created",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a630fae5.638f98",
        "type": "change",
        "z": "f5c4273d.2d80f",
        "name": "Set topic (User updated)",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "User updated",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4ffd98dd.f95938",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Call Lock Logging",
        "links": [
            "ea5c9f94.245b4"
        ],
        "x": 755,
        "y": 1460,
        "wires": []
    },
    {
        "id": "c4cf3545.c65768",
        "type": "debug",
        "z": "59474d53.1b40d4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1150,
        "y": 300,
        "wires": []
    },
    {
        "id": "1301a191.46c2ce",
        "type": "debug",
        "z": "59474d53.1b40d4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 770,
        "y": 400,
        "wires": []
    },
    {
        "id": "fdfcde86.4d29e",
        "type": "function",
        "z": "59474d53.1b40d4",
        "name": "Build log message",
        "func": "var moment = context.global.moment;\n\nlet user = msg.user;\nif (global.get(\"use_encryption\"))\n    user.code = '****';\n\nreturn { \n    payload: {\n        \"type\": msg.topic,\n        \"date\": moment().format('h:mm a M/D/YY'),\n        \"user\": user\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 220,
        "wires": [
            [
                "c857831e.0f446"
            ]
        ]
    },
    {
        "id": "c857831e.0f446",
        "type": "link out",
        "z": "59474d53.1b40d4",
        "name": "Call Write Log",
        "links": [
            "15936e4a.25dc32"
        ],
        "x": 995,
        "y": 220,
        "wires": []
    },
    {
        "id": "4d8569a.d098498",
        "type": "link out",
        "z": "4d149fd1.afec5",
        "name": "Call Lock Logging",
        "links": [
            "ea5c9f94.245b4"
        ],
        "x": 855,
        "y": 460,
        "wires": []
    },
    {
        "id": "2ba491b4.a3f3ae",
        "type": "link out",
        "z": "4d149fd1.afec5",
        "name": "Call Lock Logging",
        "links": [
            "ea5c9f94.245b4"
        ],
        "x": 855,
        "y": 220,
        "wires": []
    },
    {
        "id": "550edbdb.bee494",
        "type": "debug",
        "z": "4d149fd1.afec5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1010,
        "y": 220,
        "wires": []
    },
    {
        "id": "2cdc855c.46b3ca",
        "type": "change",
        "z": "4d149fd1.afec5",
        "name": "Set topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduled code delete",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 440,
        "wires": [
            [
                "4d8569a.d098498"
            ]
        ]
    },
    {
        "id": "436bc17d.99492",
        "type": "change",
        "z": "4d149fd1.afec5",
        "name": "Set topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Scheduled code add",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 260,
        "wires": [
            [
                "2ba491b4.a3f3ae",
                "550edbdb.bee494"
            ]
        ]
    },
    {
        "id": "965207.8202ddf8",
        "type": "function",
        "z": "59474d53.1b40d4",
        "name": "Build log message",
        "func": "var moment = context.global.moment;\n\nif (msg.topic === 'Scheduled code delete')\n    return { \n        payload: {\n            \"type\": msg.topic,\n            \"date\": moment().format('h:mm a M/D/YY'),\n            \"slot\": msg.slot,\n            \"name\": msg.name\n        }\n    };\nelse\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 260,
        "wires": [
            [
                "ea551f45.d6a4f",
                "c4cf3545.c65768"
            ]
        ]
    },
    {
        "id": "a13a7b77.6013b8",
        "type": "split",
        "z": "2994561d.23b94a",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "f80e6835.c54a08"
            ]
        ]
    },
    {
        "id": "f80e6835.c54a08",
        "type": "function",
        "z": "2994561d.23b94a",
        "name": "Slot passed?",
        "func": "if (msg.slot === undefined && msg.payload.slot === undefined)\n    return msg;\nelse return [null, msg];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 350,
        "y": 140,
        "wires": [
            [
                "16fcd03a.89631"
            ],
            [
                "71b419fc.0518b8"
            ]
        ]
    },
    {
        "id": "2646e9e1.bb4596",
        "type": "change",
        "z": "f5c4273d.2d80f",
        "name": "Restore payload",
        "rules": [
            {
                "t": "move",
                "p": "backup",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "1da62d68.ce64c3",
        "type": "function",
        "z": "f5c4273d.2d80f",
        "name": "",
        "func": "node.log(`\\n\\n**** UPSERT ***\\n\\n${JSON.stringify(msg, null, 2)}\\n\\n*** UPSERT END ***\\n\\n`);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1390,
        "y": 120,
        "wires": [
            [
                "2646e9e1.bb4596"
            ]
        ]
    },
    {
        "id": "d140372b.3df998",
        "type": "link in",
        "z": "4d149fd1.afec5",
        "name": "Manage slots",
        "links": [
            "e8cc9596.4ed698"
        ],
        "x": 115,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "e8cc9596.4ed698",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Call Manage Slots",
        "links": [
            "d140372b.3df998"
        ],
        "x": 755,
        "y": 1420,
        "wires": []
    },
    {
        "id": "288906ba.2ad8aa",
        "type": "link out",
        "z": "4c9161c6.7a8fe",
        "name": "Call Lock Logging",
        "links": [
            "ea5c9f94.245b4"
        ],
        "x": 1055,
        "y": 1680,
        "wires": []
    },
    {
        "id": "6daeb99c.6b79d8",
        "type": "function",
        "z": "4d149fd1.afec5",
        "name": "Array?",
        "func": "if (msg.payload.isArray)\n    return msg;\n\nlet a = [];\na.push(msg.payload);\nmsg.payload = a;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 540,
        "wires": [
            [
                "8e41d961.396ce8"
            ]
        ]
    }
]